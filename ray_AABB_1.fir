;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit ray_AABB_1 : 
  module MulAddRecFNToRaw_preMul : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_1 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_1 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_1 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_1 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_2 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_2 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_2 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_3 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_3 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_3 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_3 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_4 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_4 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_4 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_4 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_5 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_5 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_5 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_5 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_6 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_6 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_6 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_6 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_7 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_7 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_7 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_7 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_8 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_8 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_8 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_8 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_9 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_9 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_9 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_9 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_10 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_10 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_10 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_10 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module MulAddRecFNToRaw_preMul_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<24>, mulAddB : UInt<24>, mulAddC : UInt<48>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = bits(io.c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_27 = bits(_T_26, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_29 = bits(_T_26, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_30 = eq(_T_29, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_31 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_32 = and(_T_30, _T_31) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_32 @[rawFloatFromRecFN.scala 55:20]
    node _T_33 = bits(_T_26, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_35 = and(_T_30, _T_34) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_35 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_28 @[rawFloatFromRecFN.scala 57:20]
    node _T_36 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_36 @[rawFloatFromRecFN.scala 58:20]
    node _T_37 = cvt(_T_26) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_37 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_2 = eq(_T_28, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_2 = bits(io.c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    rawC.sig <= _T_38 @[rawFloatFromRecFN.scala 60:20]
    node _T_39 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_40 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_39, _T_40) @[MulAddRecFN.scala 98:42]
    node _T_41 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_42 = add(_T_41, asSInt(UInt<9>("h011b"))) @[MulAddRecFN.scala 101:32]
    node _T_43 = tail(_T_42, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_43) @[MulAddRecFN.scala 101:32]
    node _T_44 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_45 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_44, _T_45) @[MulAddRecFN.scala 103:42]
    node _T_46 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_47 = tail(_T_46, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_47) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    node _T_48 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_49 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_48, _T_49) @[MulAddRecFN.scala 109:50]
    node _T_50 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_51 = leq(posNatCAlignDist, UInt<5>("h018")) @[MulAddRecFN.scala 111:60]
    node _T_52 = or(isMinCAlign, _T_51) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_50, _T_52) @[MulAddRecFN.scala 111:23]
    node _T_53 = lt(posNatCAlignDist, UInt<7>("h04a")) @[MulAddRecFN.scala 115:34]
    node _T_54 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_55 = mux(_T_53, _T_54, UInt<7>("h04a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_55) @[MulAddRecFN.scala 113:12]
    node _T_56 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node hi_3 = mux(doSubMags, _T_56, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_57 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node lo_3 = mux(_T_57, UInt<53>("h01fffffffffffff"), UInt<53>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_59 = asSInt(_T_58) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_59, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_60 = shl(rawC.sig, 2) @[MulAddRecFN.scala 125:30]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_61 = bits(_T_60, 3, 0) @[primitives.scala 121:33]
    node _T_62 = orr(_T_61) @[primitives.scala 121:54]
    _WIRE[0] <= _T_62 @[primitives.scala 121:28]
    node _T_63 = bits(_T_60, 7, 4) @[primitives.scala 121:33]
    node _T_64 = orr(_T_63) @[primitives.scala 121:54]
    _WIRE[1] <= _T_64 @[primitives.scala 121:28]
    node _T_65 = bits(_T_60, 11, 8) @[primitives.scala 121:33]
    node _T_66 = orr(_T_65) @[primitives.scala 121:54]
    _WIRE[2] <= _T_66 @[primitives.scala 121:28]
    node _T_67 = bits(_T_60, 15, 12) @[primitives.scala 121:33]
    node _T_68 = orr(_T_67) @[primitives.scala 121:54]
    _WIRE[3] <= _T_68 @[primitives.scala 121:28]
    node _T_69 = bits(_T_60, 19, 16) @[primitives.scala 121:33]
    node _T_70 = orr(_T_69) @[primitives.scala 121:54]
    _WIRE[4] <= _T_70 @[primitives.scala 121:28]
    node _T_71 = bits(_T_60, 23, 20) @[primitives.scala 121:33]
    node _T_72 = orr(_T_71) @[primitives.scala 121:54]
    _WIRE[5] <= _T_72 @[primitives.scala 121:28]
    node _T_73 = bits(_T_60, 26, 24) @[primitives.scala 124:15]
    node _T_74 = orr(_T_73) @[primitives.scala 124:57]
    _WIRE[6] <= _T_74 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_4 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_3 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_4 = cat(hi_hi, hi_lo_3) @[primitives.scala 125:20]
    node _T_75 = cat(hi_4, lo_4) @[primitives.scala 125:20]
    node _T_76 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_77 = dshr(asSInt(UInt<33>("h0100000000")), _T_76) @[primitives.scala 77:58]
    node _T_78 = bits(_T_77, 19, 14) @[primitives.scala 79:22]
    node _T_79 = bits(_T_78, 3, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_79, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_80, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_80, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node _T_81 = bits(_T_79, 3, 2) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node hi_8 = cat(hi_6, lo_7) @[Cat.scala 30:58]
    node _T_82 = bits(_T_78, 5, 4) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node _T_83 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_84 = and(_T_75, _T_83) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_84) @[MulAddRecFN.scala 133:11]
    node _T_85 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_86 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_87 = andr(_T_86) @[MulAddRecFN.scala 137:39]
    node _T_88 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_89 = and(_T_87, _T_88) @[MulAddRecFN.scala 137:44]
    node _T_90 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_91 = orr(_T_90) @[MulAddRecFN.scala 138:39]
    node _T_92 = or(_T_91, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node lo_10 = mux(doSubMags, _T_89, _T_92) @[MulAddRecFN.scala 136:16]
    node hi_10 = asUInt(_T_85) @[Cat.scala 30:58]
    node alignedSigC = cat(hi_10, lo_10) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_93 = bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_93 @[MulAddRecFN.scala 146:16]
    node _T_94 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[common.scala 81:49]
    node _T_96 = and(rawA.isNaN, _T_95) @[common.scala 81:46]
    node _T_97 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_98 = eq(_T_97, UInt<1>("h00")) @[common.scala 81:49]
    node _T_99 = and(rawB.isNaN, _T_98) @[common.scala 81:46]
    node _T_100 = or(_T_96, _T_99) @[MulAddRecFN.scala 149:32]
    node _T_101 = bits(rawC.sig, 22, 22) @[common.scala 81:56]
    node _T_102 = eq(_T_101, UInt<1>("h00")) @[common.scala 81:49]
    node _T_103 = and(rawC.isNaN, _T_102) @[common.scala 81:46]
    node _T_104 = or(_T_100, _T_103) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_104 @[MulAddRecFN.scala 148:30]
    node _T_105 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_105 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_106 = sub(sExpAlignedProd, asSInt(UInt<6>("h018"))) @[MulAddRecFN.scala 161:53]
    node _T_107 = tail(_T_106, 1) @[MulAddRecFN.scala 161:53]
    node _T_108 = asSInt(_T_107) @[MulAddRecFN.scala 161:53]
    node _T_109 = mux(CIsDominant, rawC.sExp, _T_108) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_109 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_110 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_110 @[MulAddRecFN.scala 164:34]
    node _T_111 = bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_111 @[MulAddRecFN.scala 165:34]
    node _T_112 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_112 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<10>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<26>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<49>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node hi_hi = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node hi_lo = bits(io.mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(hi, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_3 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_4 = sub(io.fromPreMul.sExpSum, _T_3) @[MulAddRecFN.scala 205:43]
    node _T_5 = tail(_T_4, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_5) @[MulAddRecFN.scala 205:43]
    node _T_6 = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _T_7 = not(_T_6) @[MulAddRecFN.scala 208:13]
    node hi_lo_1 = bits(io.fromPreMul.highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_8 = cat(hi_1, lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_7, _T_8) @[MulAddRecFN.scala 207:12]
    node _T_9 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 217:14]
    node _T_11 = orr(_T_10) @[MulAddRecFN.scala 217:36]
    node _T_12 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _T_13 = orr(_T_12) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_11, _T_13) @[MulAddRecFN.scala 216:12]
    node _T_14 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_14, 49, 21) @[MulAddRecFN.scala 221:56]
    node _T_15 = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _T_16 = shl(_T_15, 3) @[MulAddRecFN.scala 224:53]
    wire _WIRE : UInt<1>[7] @[primitives.scala 119:30]
    _WIRE is invalid @[primitives.scala 119:30]
    node _T_17 = bits(_T_16, 3, 0) @[primitives.scala 121:33]
    node _T_18 = orr(_T_17) @[primitives.scala 121:54]
    _WIRE[0] <= _T_18 @[primitives.scala 121:28]
    node _T_19 = bits(_T_16, 7, 4) @[primitives.scala 121:33]
    node _T_20 = orr(_T_19) @[primitives.scala 121:54]
    _WIRE[1] <= _T_20 @[primitives.scala 121:28]
    node _T_21 = bits(_T_16, 11, 8) @[primitives.scala 121:33]
    node _T_22 = orr(_T_21) @[primitives.scala 121:54]
    _WIRE[2] <= _T_22 @[primitives.scala 121:28]
    node _T_23 = bits(_T_16, 15, 12) @[primitives.scala 121:33]
    node _T_24 = orr(_T_23) @[primitives.scala 121:54]
    _WIRE[3] <= _T_24 @[primitives.scala 121:28]
    node _T_25 = bits(_T_16, 19, 16) @[primitives.scala 121:33]
    node _T_26 = orr(_T_25) @[primitives.scala 121:54]
    _WIRE[4] <= _T_26 @[primitives.scala 121:28]
    node _T_27 = bits(_T_16, 23, 20) @[primitives.scala 121:33]
    node _T_28 = orr(_T_27) @[primitives.scala 121:54]
    _WIRE[5] <= _T_28 @[primitives.scala 121:28]
    node _T_29 = bits(_T_16, 26, 24) @[primitives.scala 124:15]
    node _T_30 = orr(_T_29) @[primitives.scala 124:57]
    _WIRE[6] <= _T_30 @[primitives.scala 123:38]
    node lo_hi = cat(_WIRE[2], _WIRE[1]) @[primitives.scala 125:20]
    node lo_1 = cat(lo_hi, _WIRE[0]) @[primitives.scala 125:20]
    node hi_lo_2 = cat(_WIRE[4], _WIRE[3]) @[primitives.scala 125:20]
    node hi_hi_1 = cat(_WIRE[6], _WIRE[5]) @[primitives.scala 125:20]
    node hi_2 = cat(hi_hi_1, hi_lo_2) @[primitives.scala 125:20]
    node _T_31 = cat(hi_2, lo_1) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<9>("h0100")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 6, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_36, 1, 0) @[Bitwise.scala 109:18]
    node hi_3 = bits(_T_37, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_37, 1, 1) @[Bitwise.scala 109:44]
    node hi_4 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_38 = bits(_T_36, 3, 2) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node hi_6 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_39 = bits(_T_35, 5, 4) @[Bitwise.scala 109:44]
    node hi_7 = bits(_T_39, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_39, 1, 1) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_7, lo_5) @[Cat.scala 30:58]
    node _T_40 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_41 = and(_T_31, _T_40) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_41) @[MulAddRecFN.scala 225:73]
    node hi_8 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_42 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_43 = orr(_T_42) @[MulAddRecFN.scala 228:32]
    node _T_44 = or(_T_43, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node lo_7 = or(_T_44, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 50, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _WIRE_1 : UInt<1>[26] @[primitives.scala 102:30]
    _WIRE_1 is invalid @[primitives.scala 102:30]
    node _T_50 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_51 = orr(_T_50) @[primitives.scala 104:54]
    _WIRE_1[0] <= _T_51 @[primitives.scala 104:28]
    node _T_52 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_53 = orr(_T_52) @[primitives.scala 104:54]
    _WIRE_1[1] <= _T_53 @[primitives.scala 104:28]
    node _T_54 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_55 = orr(_T_54) @[primitives.scala 104:54]
    _WIRE_1[2] <= _T_55 @[primitives.scala 104:28]
    node _T_56 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_57 = orr(_T_56) @[primitives.scala 104:54]
    _WIRE_1[3] <= _T_57 @[primitives.scala 104:28]
    node _T_58 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_59 = orr(_T_58) @[primitives.scala 104:54]
    _WIRE_1[4] <= _T_59 @[primitives.scala 104:28]
    node _T_60 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_61 = orr(_T_60) @[primitives.scala 104:54]
    _WIRE_1[5] <= _T_61 @[primitives.scala 104:28]
    node _T_62 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_63 = orr(_T_62) @[primitives.scala 104:54]
    _WIRE_1[6] <= _T_63 @[primitives.scala 104:28]
    node _T_64 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_65 = orr(_T_64) @[primitives.scala 104:54]
    _WIRE_1[7] <= _T_65 @[primitives.scala 104:28]
    node _T_66 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_67 = orr(_T_66) @[primitives.scala 104:54]
    _WIRE_1[8] <= _T_67 @[primitives.scala 104:28]
    node _T_68 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_69 = orr(_T_68) @[primitives.scala 104:54]
    _WIRE_1[9] <= _T_69 @[primitives.scala 104:28]
    node _T_70 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_71 = orr(_T_70) @[primitives.scala 104:54]
    _WIRE_1[10] <= _T_71 @[primitives.scala 104:28]
    node _T_72 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_73 = orr(_T_72) @[primitives.scala 104:54]
    _WIRE_1[11] <= _T_73 @[primitives.scala 104:28]
    node _T_74 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_75 = orr(_T_74) @[primitives.scala 104:54]
    _WIRE_1[12] <= _T_75 @[primitives.scala 104:28]
    node _T_76 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_77 = orr(_T_76) @[primitives.scala 104:54]
    _WIRE_1[13] <= _T_77 @[primitives.scala 104:28]
    node _T_78 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_79 = orr(_T_78) @[primitives.scala 104:54]
    _WIRE_1[14] <= _T_79 @[primitives.scala 104:28]
    node _T_80 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_81 = orr(_T_80) @[primitives.scala 104:54]
    _WIRE_1[15] <= _T_81 @[primitives.scala 104:28]
    node _T_82 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_83 = orr(_T_82) @[primitives.scala 104:54]
    _WIRE_1[16] <= _T_83 @[primitives.scala 104:28]
    node _T_84 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_85 = orr(_T_84) @[primitives.scala 104:54]
    _WIRE_1[17] <= _T_85 @[primitives.scala 104:28]
    node _T_86 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_87 = orr(_T_86) @[primitives.scala 104:54]
    _WIRE_1[18] <= _T_87 @[primitives.scala 104:28]
    node _T_88 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_89 = orr(_T_88) @[primitives.scala 104:54]
    _WIRE_1[19] <= _T_89 @[primitives.scala 104:28]
    node _T_90 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_91 = orr(_T_90) @[primitives.scala 104:54]
    _WIRE_1[20] <= _T_91 @[primitives.scala 104:28]
    node _T_92 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_93 = orr(_T_92) @[primitives.scala 104:54]
    _WIRE_1[21] <= _T_93 @[primitives.scala 104:28]
    node _T_94 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_95 = orr(_T_94) @[primitives.scala 104:54]
    _WIRE_1[22] <= _T_95 @[primitives.scala 104:28]
    node _T_96 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_97 = orr(_T_96) @[primitives.scala 104:54]
    _WIRE_1[23] <= _T_97 @[primitives.scala 104:28]
    node _T_98 = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node _T_99 = orr(_T_98) @[primitives.scala 104:54]
    _WIRE_1[24] <= _T_99 @[primitives.scala 104:28]
    node _T_100 = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node _T_101 = orr(_T_100) @[primitives.scala 107:57]
    _WIRE_1[25] <= _T_101 @[primitives.scala 106:38]
    node lo_lo_lo_hi = cat(_WIRE_1[2], _WIRE_1[1]) @[primitives.scala 108:20]
    node lo_lo_lo = cat(lo_lo_lo_hi, _WIRE_1[0]) @[primitives.scala 108:20]
    node lo_lo_hi_hi = cat(_WIRE_1[5], _WIRE_1[4]) @[primitives.scala 108:20]
    node lo_lo_hi = cat(lo_lo_hi_hi, _WIRE_1[3]) @[primitives.scala 108:20]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[primitives.scala 108:20]
    node lo_hi_lo_hi = cat(_WIRE_1[8], _WIRE_1[7]) @[primitives.scala 108:20]
    node lo_hi_lo = cat(lo_hi_lo_hi, _WIRE_1[6]) @[primitives.scala 108:20]
    node lo_hi_hi_lo = cat(_WIRE_1[10], _WIRE_1[9]) @[primitives.scala 108:20]
    node lo_hi_hi_hi = cat(_WIRE_1[12], _WIRE_1[11]) @[primitives.scala 108:20]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[primitives.scala 108:20]
    node lo_hi_1 = cat(lo_hi_hi, lo_hi_lo) @[primitives.scala 108:20]
    node lo_8 = cat(lo_hi_1, lo_lo) @[primitives.scala 108:20]
    node hi_lo_lo_hi = cat(_WIRE_1[15], _WIRE_1[14]) @[primitives.scala 108:20]
    node hi_lo_lo = cat(hi_lo_lo_hi, _WIRE_1[13]) @[primitives.scala 108:20]
    node hi_lo_hi_hi = cat(_WIRE_1[18], _WIRE_1[17]) @[primitives.scala 108:20]
    node hi_lo_hi = cat(hi_lo_hi_hi, _WIRE_1[16]) @[primitives.scala 108:20]
    node hi_lo_3 = cat(hi_lo_hi, hi_lo_lo) @[primitives.scala 108:20]
    node hi_hi_lo_hi = cat(_WIRE_1[21], _WIRE_1[20]) @[primitives.scala 108:20]
    node hi_hi_lo = cat(hi_hi_lo_hi, _WIRE_1[19]) @[primitives.scala 108:20]
    node hi_hi_hi_lo = cat(_WIRE_1[23], _WIRE_1[22]) @[primitives.scala 108:20]
    node hi_hi_hi_hi = cat(_WIRE_1[25], _WIRE_1[24]) @[primitives.scala 108:20]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[primitives.scala 108:20]
    node hi_hi_2 = cat(hi_hi_hi, hi_hi_lo) @[primitives.scala 108:20]
    node hi_9 = cat(hi_hi_2, hi_lo_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(hi_9, lo_8) @[primitives.scala 108:20]
    node _T_102 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_103 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_104 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_105 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_106 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_107 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_108 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_109 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_110 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_111 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_112 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_113 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_114 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_115 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _T_117 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _T_118 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _T_119 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _T_120 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _T_121 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _T_122 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _T_123 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _T_124 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _T_125 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _T_126 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _T_127 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _T_128 = mux(_T_103, UInt<5>("h018"), UInt<5>("h019")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_104, UInt<5>("h017"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_105, UInt<5>("h016"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_106, UInt<5>("h015"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_107, UInt<5>("h014"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_108, UInt<5>("h013"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_109, UInt<5>("h012"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_110, UInt<5>("h011"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_111, UInt<5>("h010"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_112, UInt<4>("h0f"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_113, UInt<4>("h0e"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_114, UInt<4>("h0d"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_115, UInt<4>("h0c"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_116, UInt<4>("h0b"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_117, UInt<4>("h0a"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_118, UInt<4>("h09"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_119, UInt<4>("h08"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_120, UInt<3>("h07"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_121, UInt<3>("h06"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_122, UInt<3>("h05"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_123, UInt<3>("h04"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_124, UInt<2>("h03"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_125, UInt<2>("h02"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_126, UInt<1>("h01"), _T_150) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_127, UInt<1>("h00"), _T_151) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_152 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_153 = sub(io.fromPreMul.sExpSum, _T_152) @[MulAddRecFN.scala 243:46]
    node _T_154 = tail(_T_153, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_154) @[MulAddRecFN.scala 243:46]
    node _T_155 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_155, 51, 23) @[MulAddRecFN.scala 245:50]
    node _T_156 = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    node _T_157 = shl(_T_156, 0) @[MulAddRecFN.scala 249:55]
    wire _WIRE_2 : UInt<1>[7] @[primitives.scala 102:30]
    _WIRE_2 is invalid @[primitives.scala 102:30]
    node _T_158 = bits(_T_157, 1, 0) @[primitives.scala 104:33]
    node _T_159 = orr(_T_158) @[primitives.scala 104:54]
    _WIRE_2[0] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(_T_157, 3, 2) @[primitives.scala 104:33]
    node _T_161 = orr(_T_160) @[primitives.scala 104:54]
    _WIRE_2[1] <= _T_161 @[primitives.scala 104:28]
    node _T_162 = bits(_T_157, 5, 4) @[primitives.scala 104:33]
    node _T_163 = orr(_T_162) @[primitives.scala 104:54]
    _WIRE_2[2] <= _T_163 @[primitives.scala 104:28]
    node _T_164 = bits(_T_157, 7, 6) @[primitives.scala 104:33]
    node _T_165 = orr(_T_164) @[primitives.scala 104:54]
    _WIRE_2[3] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(_T_157, 9, 8) @[primitives.scala 104:33]
    node _T_167 = orr(_T_166) @[primitives.scala 104:54]
    _WIRE_2[4] <= _T_167 @[primitives.scala 104:28]
    node _T_168 = bits(_T_157, 11, 10) @[primitives.scala 104:33]
    node _T_169 = orr(_T_168) @[primitives.scala 104:54]
    _WIRE_2[5] <= _T_169 @[primitives.scala 104:28]
    node _T_170 = bits(_T_157, 12, 12) @[primitives.scala 107:15]
    node _T_171 = orr(_T_170) @[primitives.scala 107:57]
    _WIRE_2[6] <= _T_171 @[primitives.scala 106:38]
    node lo_hi_2 = cat(_WIRE_2[2], _WIRE_2[1]) @[primitives.scala 108:20]
    node lo_9 = cat(lo_hi_2, _WIRE_2[0]) @[primitives.scala 108:20]
    node hi_lo_4 = cat(_WIRE_2[4], _WIRE_2[3]) @[primitives.scala 108:20]
    node hi_hi_3 = cat(_WIRE_2[6], _WIRE_2[5]) @[primitives.scala 108:20]
    node hi_10 = cat(hi_hi_3, hi_lo_4) @[primitives.scala 108:20]
    node _T_172 = cat(hi_10, lo_9) @[primitives.scala 108:20]
    node _T_173 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_174 = not(_T_173) @[primitives.scala 51:21]
    node _T_175 = dshr(asSInt(UInt<17>("h010000")), _T_174) @[primitives.scala 77:58]
    node _T_176 = bits(_T_175, 6, 1) @[primitives.scala 79:22]
    node _T_177 = bits(_T_176, 3, 0) @[Bitwise.scala 109:18]
    node _T_178 = bits(_T_177, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_178, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_178, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node _T_179 = bits(_T_177, 3, 2) @[Bitwise.scala 109:44]
    node hi_13 = bits(_T_179, 0, 0) @[Bitwise.scala 109:18]
    node lo_11 = bits(_T_179, 1, 1) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_13, lo_11) @[Cat.scala 30:58]
    node hi_14 = cat(hi_12, lo_12) @[Cat.scala 30:58]
    node _T_180 = bits(_T_176, 5, 4) @[Bitwise.scala 109:44]
    node hi_15 = bits(_T_180, 0, 0) @[Bitwise.scala 109:18]
    node lo_13 = bits(_T_180, 1, 1) @[Bitwise.scala 109:44]
    node lo_14 = cat(hi_15, lo_13) @[Cat.scala 30:58]
    node _T_181 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node _T_182 = and(_T_172, _T_181) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_182) @[MulAddRecFN.scala 251:11]
    node hi_16 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_183 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_184 = orr(_T_183) @[MulAddRecFN.scala 254:35]
    node lo_15 = or(_T_184, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(hi_16, lo_15) @[Cat.scala 30:58]
    node _T_185 = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_185, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_186 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_186) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_187 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_187, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_188 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_189 = or(io.fromPreMul.isSigNaNAny, _T_188) @[MulAddRecFN.scala 273:35]
    node _T_190 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_191 = or(_T_189, _T_190) @[MulAddRecFN.scala 274:57]
    node _T_192 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_193 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_194 = and(_T_192, _T_193) @[MulAddRecFN.scala 276:36]
    node _T_195 = and(_T_194, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_196 = and(_T_195, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_197 = or(_T_191, _T_196) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_197 @[MulAddRecFN.scala 272:19]
    node _T_198 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_198 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_199 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_200 = and(_T_199, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_201 = or(notNaN_addZeros, _T_200) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_201 @[MulAddRecFN.scala 283:22]
    node _T_202 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_203 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_204 = or(_T_202, _T_203) @[MulAddRecFN.scala 287:54]
    node _T_205 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_206 = and(notNaN_addZeros, _T_205) @[MulAddRecFN.scala 289:26]
    node _T_207 = and(_T_206, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_208 = and(_T_207, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_209 = or(_T_204, _T_208) @[MulAddRecFN.scala 288:43]
    node _T_210 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_211 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_212 = and(_T_210, _T_211) @[MulAddRecFN.scala 291:46]
    node _T_213 = or(_T_209, _T_212) @[MulAddRecFN.scala 290:48]
    node _T_214 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_215 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_216 = and(_T_214, _T_215) @[MulAddRecFN.scala 293:28]
    node _T_217 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_218 = and(_T_216, _T_217) @[MulAddRecFN.scala 293:49]
    node _T_219 = or(_T_213, _T_218) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_219 @[MulAddRecFN.scala 286:20]
    node _T_220 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_220 @[MulAddRecFN.scala 295:20]
    node _T_221 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_221 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("h0ffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node hi = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_52 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_53 = bits(_T_52, 3, 0) @[Bitwise.scala 109:18]
    node _T_54 = bits(_T_53, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_54, 0, 0) @[Bitwise.scala 109:18]
    node lo = bits(_T_54, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo) @[Cat.scala 30:58]
    node _T_55 = bits(_T_53, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_3, lo_1) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node _T_56 = bits(_T_52, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_56, 0, 0) @[Bitwise.scala 109:18]
    node lo_3 = bits(_T_56, 1, 1) @[Bitwise.scala 109:44]
    node lo_4 = cat(hi_5, lo_3) @[Cat.scala 30:58]
    node lo_5 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_57 = cat(hi, lo_5) @[Cat.scala 30:58]
    node _T_58 = not(_T_57) @[primitives.scala 74:36]
    node _T_59 = mux(_T_9, UInt<1>("h00"), _T_58) @[primitives.scala 74:21]
    node hi_6 = not(_T_59) @[primitives.scala 74:17]
    node _T_60 = cat(hi_6, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_61 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_62 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_63 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_62) @[primitives.scala 77:58]
    node _T_64 = bits(_T_63, 2, 0) @[primitives.scala 79:22]
    node _T_65 = bits(_T_64, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_65, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_65, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node lo_7 = bits(_T_64, 2, 2) @[Bitwise.scala 109:44]
    node _T_66 = cat(hi_8, lo_7) @[Cat.scala 30:58]
    node _T_67 = mux(_T_61, _T_66, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_68 = mux(_T_7, _T_60, _T_67) @[primitives.scala 66:24]
    node _T_69 = mux(_T_5, _T_68, UInt<1>("h00")) @[primitives.scala 61:24]
    node hi_9 = or(_T_69, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_70 = cat(hi_9, UInt<2>("h03")) @[Cat.scala 30:58]
    node lo_8 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_71 = cat(UInt<1>("h00"), lo_8) @[Cat.scala 30:58]
    node _T_72 = not(_T_71) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_73 = and(_T_72, _T_70) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_75 = orr(_T_74) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_76 = and(adjustedSig, _T_71) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_77 = orr(_T_76) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_78 = or(_T_75, _T_77) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_79 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_80 = and(_T_79, _T_75) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_81 = and(roundMagUp, _T_78) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_82 = or(_T_80, _T_81) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_83 = or(adjustedSig, _T_70) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_84 = shr(_T_83, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_85 = add(_T_84, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_86 = and(roundingMode_near_even, _T_75) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_87 = eq(_T_77, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_88 = and(_T_86, _T_87) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_89 = shr(_T_70, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_90 = mux(_T_88, _T_89, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_92 = and(_T_85, _T_91) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_93 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_94 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_95 = shr(_T_94, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_96 = and(roundingMode_odd, _T_78) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_97 = shr(_T_73, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_99 = or(_T_95, _T_98) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_100 = mux(_T_82, _T_92, _T_99) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_101 = shr(_T_100, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_102 = cvt(_T_101) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_103 = add(io.in.sExp, _T_102) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_104 = bits(_T_103, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_104 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_105 = bits(_T_100, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_106 = bits(_T_100, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_107 = mux(doShiftSigDown1, _T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_107 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_108 = shr(_T_103, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_109 = geq(_T_108, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_109 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_110 = lt(_T_103, asSInt(UInt<8>("h06b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_110 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_111 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_112 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_113 = mux(doShiftSigDown1, _T_111, _T_112) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_114 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_115 = and(doShiftSigDown1, _T_114) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_116 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_117 = orr(_T_116) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_118 = or(_T_115, _T_117) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_119 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_120 = and(_T_119, _T_113) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_121 = and(roundMagUp, _T_118) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_122 = or(_T_120, _T_121) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_123 = bits(_T_100, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_124 = bits(_T_100, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_125 = mux(doShiftSigDown1, _T_123, _T_124) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_126 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_127 = leq(_T_126, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_128 = and(_T_78, _T_127) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_129 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_130 = bits(_T_70, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_131 = mux(doShiftSigDown1, _T_129, _T_130) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_132 = and(_T_128, _T_131) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_133 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_134 = bits(_T_70, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_135 = bits(_T_70, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_136 = mux(doShiftSigDown1, _T_134, _T_135) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_137 = eq(_T_136, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_138 = and(_T_133, _T_137) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_139 = and(_T_138, _T_125) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_140 = and(_T_139, _T_75) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_141 = and(_T_140, _T_122) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_142 = eq(_T_141, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_143 = and(_T_132, _T_142) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_144 = or(common_totalUnderflow, _T_143) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_144 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_145 = or(common_totalUnderflow, _T_78) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_145 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_146 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_147 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_148 = and(_T_146, _T_147) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_149 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_150 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_150) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_151 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_151, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_152 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_153 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_152, _T_153) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_154 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_154) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_155 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_155) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_156 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_157 = mux(_T_156, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_158 = not(_T_157) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_159 = and(common_expOut, _T_158) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_160 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_161 = mux(pegMinNonzeroMagOut, _T_160, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_162 = not(_T_161) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_163 = and(_T_159, _T_162) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_164 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_165 = not(_T_164) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_166 = and(_T_163, _T_165) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_167 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_168 = not(_T_167) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_169 = and(_T_166, _T_168) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_170 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_171 = or(_T_169, _T_170) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_172 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_173 = or(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_174 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_175 = or(_T_173, _T_174) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_176 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_175, _T_176) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_177 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_178 = or(_T_177, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_179 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_180 = mux(_T_178, _T_179, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_181 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_182 = mux(_T_181, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_180, _T_182) @[RoundAnyRawFNToRecFN.scala 281:11]
    node hi_10 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_183 = cat(hi_10, fractOut) @[Cat.scala 30:58]
    io.out <= _T_183 @[RoundAnyRawFNToRecFN.scala 284:12]
    node lo_9 = cat(underflow, inexact) @[Cat.scala 30:58]
    node hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node hi_11 = cat(hi_hi, overflow) @[Cat.scala 30:58]
    node _T_184 = cat(hi_11, lo_9) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_184 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_11 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MY_MULADD_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, flip c : UInt<32>, out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg premul_a : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 15:37]
    reg premul_b : UInt<24>, clock with : (reset => (reset, UInt<24>("h00"))) @[FMULADD_1G_2.scala 16:37]
    reg premul_c : UInt<48>, clock with : (reset => (reset, UInt<48>("h00"))) @[FMULADD_1G_2.scala 17:37]
    reg isSigNaNAny : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 18:33]
    reg isNaNAOrB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 19:34]
    reg isInfA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 20:43]
    reg isZeroA : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 21:40]
    reg isInfB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 22:43]
    reg isZeroB : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 23:40]
    reg signProd : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 24:38]
    reg isNaNC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 25:39]
    reg isInfC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 26:42]
    reg isZeroC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 27:39]
    reg sExpSum : SInt<10>, clock with : (reset => (reset, asSInt(UInt<10>("h00")))) @[FMULADD_1G_2.scala 28:36]
    reg doSubMags : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 29:33]
    reg CIsDominant : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 30:33]
    reg CDom_CAlignDist : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[FMULADD_1G_2.scala 31:34]
    reg highAlignedSigC : UInt<26>, clock with : (reset => (reset, UInt<26>("h00"))) @[FMULADD_1G_2.scala 32:37]
    reg bit0AlignedSigC : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMULADD_1G_2.scala 33:38]
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_11 @[FMULADD_1G_2.scala 36:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= UInt<1>("h00") @[FMULADD_1G_2.scala 38:35]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.a <= _T_71 @[FMULADD_1G_2.scala 39:35]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.b <= _T_143 @[FMULADD_1G_2.scala 40:35]
    node _T_144 = bits(io.c, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_145 = bits(io.c, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_146 = bits(io.c, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_148 = eq(_T_146, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_149 = bits(_T_146, 0, 0) @[primitives.scala 92:52]
    node _T_150 = bits(_T_146, 1, 1) @[primitives.scala 92:52]
    node _T_151 = bits(_T_146, 2, 2) @[primitives.scala 92:52]
    node _T_152 = bits(_T_146, 3, 3) @[primitives.scala 92:52]
    node _T_153 = bits(_T_146, 4, 4) @[primitives.scala 92:52]
    node _T_154 = bits(_T_146, 5, 5) @[primitives.scala 92:52]
    node _T_155 = bits(_T_146, 6, 6) @[primitives.scala 92:52]
    node _T_156 = bits(_T_146, 7, 7) @[primitives.scala 92:52]
    node _T_157 = bits(_T_146, 8, 8) @[primitives.scala 92:52]
    node _T_158 = bits(_T_146, 9, 9) @[primitives.scala 92:52]
    node _T_159 = bits(_T_146, 10, 10) @[primitives.scala 92:52]
    node _T_160 = bits(_T_146, 11, 11) @[primitives.scala 92:52]
    node _T_161 = bits(_T_146, 12, 12) @[primitives.scala 92:52]
    node _T_162 = bits(_T_146, 13, 13) @[primitives.scala 92:52]
    node _T_163 = bits(_T_146, 14, 14) @[primitives.scala 92:52]
    node _T_164 = bits(_T_146, 15, 15) @[primitives.scala 92:52]
    node _T_165 = bits(_T_146, 16, 16) @[primitives.scala 92:52]
    node _T_166 = bits(_T_146, 17, 17) @[primitives.scala 92:52]
    node _T_167 = bits(_T_146, 18, 18) @[primitives.scala 92:52]
    node _T_168 = bits(_T_146, 19, 19) @[primitives.scala 92:52]
    node _T_169 = bits(_T_146, 20, 20) @[primitives.scala 92:52]
    node _T_170 = bits(_T_146, 21, 21) @[primitives.scala 92:52]
    node _T_171 = bits(_T_146, 22, 22) @[primitives.scala 92:52]
    node _T_172 = mux(_T_150, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<5>("h014"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<5>("h013"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<5>("h012"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<5>("h011"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<5>("h010"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("h0f"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h0e"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h0d"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<4>("h0c"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<4>("h0b"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<4>("h0a"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<4>("h09"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<4>("h08"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<3>("h07"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<3>("h06"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<3>("h05"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_167, UInt<3>("h04"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_168, UInt<2>("h03"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<2>("h02"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<1>("h01"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<1>("h00"), _T_192) @[Mux.scala 47:69]
    node _T_194 = dshl(_T_146, _T_193) @[rawFloatFromFN.scala 54:36]
    node _T_195 = bits(_T_194, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_196 = shl(_T_195, 1) @[rawFloatFromFN.scala 54:64]
    node _T_197 = xor(_T_193, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_198 = mux(_T_147, _T_197, _T_145) @[rawFloatFromFN.scala 56:16]
    node _T_199 = mux(_T_147, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_200 = or(UInt<8>("h080"), _T_199) @[rawFloatFromFN.scala 60:22]
    node _T_201 = add(_T_198, _T_200) @[rawFloatFromFN.scala 59:15]
    node _T_202 = tail(_T_201, 1) @[rawFloatFromFN.scala 59:15]
    node _T_203 = and(_T_147, _T_148) @[rawFloatFromFN.scala 62:34]
    node _T_204 = bits(_T_202, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_205 = eq(_T_204, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_2 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_206 = eq(_T_148, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_207 = and(_T_205, _T_206) @[rawFloatFromFN.scala 66:33]
    _WIRE_2.isNaN <= _T_207 @[rawFloatFromFN.scala 66:20]
    node _T_208 = and(_T_205, _T_148) @[rawFloatFromFN.scala 67:33]
    _WIRE_2.isInf <= _T_208 @[rawFloatFromFN.scala 67:20]
    _WIRE_2.isZero <= _T_203 @[rawFloatFromFN.scala 68:20]
    _WIRE_2.sign <= _T_144 @[rawFloatFromFN.scala 69:20]
    node _T_209 = bits(_T_202, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_210 = cvt(_T_209) @[rawFloatFromFN.scala 70:48]
    _WIRE_2.sExp <= _T_210 @[rawFloatFromFN.scala 70:20]
    node hi_lo_4 = eq(_T_203, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_4 = mux(_T_147, _T_196, _T_146) @[rawFloatFromFN.scala 72:42]
    node hi_4 = cat(UInt<1>("h00"), hi_lo_4) @[Cat.scala 30:58]
    node _T_211 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_2.sig <= _T_211 @[rawFloatFromFN.scala 71:17]
    node _T_212 = bits(_WIRE_2.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_213 = mux(_WIRE_2.isZero, UInt<3>("h00"), _T_212) @[recFNFromFN.scala 48:16]
    node _T_214 = mux(_WIRE_2.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_5 = or(_T_213, _T_214) @[recFNFromFN.scala 48:79]
    node lo_hi_2 = bits(_WIRE_2.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_2 = bits(_WIRE_2.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_5 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_5 = cat(_WIRE_2.sign, hi_lo_5) @[Cat.scala 30:58]
    node _T_215 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    mulAddRecFNToRaw_preMul.io.c <= _T_215 @[FMULADD_1G_2.scala 41:35]
    isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[FMULADD_1G_2.scala 43:61]
    isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[FMULADD_1G_2.scala 44:62]
    isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[FMULADD_1G_2.scala 45:70]
    isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[FMULADD_1G_2.scala 46:67]
    isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[FMULADD_1G_2.scala 47:70]
    isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[FMULADD_1G_2.scala 48:67]
    signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[FMULADD_1G_2.scala 49:65]
    isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[FMULADD_1G_2.scala 50:66]
    isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[FMULADD_1G_2.scala 51:69]
    isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[FMULADD_1G_2.scala 52:66]
    sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[FMULADD_1G_2.scala 53:63]
    doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[FMULADD_1G_2.scala 54:60]
    CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[FMULADD_1G_2.scala 55:59]
    CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[FMULADD_1G_2.scala 56:54]
    highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[FMULADD_1G_2.scala 57:56]
    bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[FMULADD_1G_2.scala 58:57]
    premul_a <= mulAddRecFNToRaw_preMul.io.mulAddA @[FMULADD_1G_2.scala 103:63]
    premul_b <= mulAddRecFNToRaw_preMul.io.mulAddB @[FMULADD_1G_2.scala 104:63]
    premul_c <= mulAddRecFNToRaw_preMul.io.mulAddC @[FMULADD_1G_2.scala 105:63]
    node _T_216 = mul(premul_a, premul_b) @[FMULADD_1G_2.scala 113:19]
    node mulAddResult = add(_T_216, premul_c) @[FMULADD_1G_2.scala 113:31]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_11 @[FMULADD_1G_2.scala 116:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_postMul.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 117:46]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[FMULADD_1G_2.scala 118:46]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isSigNaNAny <= isSigNaNAny @[FMULADD_1G_2.scala 119:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNAOrB <= isNaNAOrB @[FMULADD_1G_2.scala 120:86]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfA <= isInfA @[FMULADD_1G_2.scala 121:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroA <= isZeroA @[FMULADD_1G_2.scala 122:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfB <= isInfB @[FMULADD_1G_2.scala 123:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroB <= isZeroB @[FMULADD_1G_2.scala 124:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.signProd <= signProd @[FMULADD_1G_2.scala 125:89]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isNaNC <= isNaNC @[FMULADD_1G_2.scala 126:90]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isInfC <= isInfC @[FMULADD_1G_2.scala 127:94]
    mulAddRecFNToRaw_postMul.io.fromPreMul.isZeroC <= isZeroC @[FMULADD_1G_2.scala 128:91]
    mulAddRecFNToRaw_postMul.io.fromPreMul.sExpSum <= sExpSum @[FMULADD_1G_2.scala 129:88]
    mulAddRecFNToRaw_postMul.io.fromPreMul.doSubMags <= doSubMags @[FMULADD_1G_2.scala 130:85]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CIsDominant <= CIsDominant @[FMULADD_1G_2.scala 131:84]
    mulAddRecFNToRaw_postMul.io.fromPreMul.CDom_CAlignDist <= CDom_CAlignDist @[FMULADD_1G_2.scala 132:78]
    mulAddRecFNToRaw_postMul.io.fromPreMul.highAlignedSigC <= highAlignedSigC @[FMULADD_1G_2.scala 133:80]
    mulAddRecFNToRaw_postMul.io.fromPreMul.bit0AlignedSigC <= bit0AlignedSigC @[FMULADD_1G_2.scala 134:82]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_11 @[FMULADD_1G_2.scala 137:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[FMULADD_1G_2.scala 138:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[FMULADD_1G_2.scala 139:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[FMULADD_1G_2.scala 140:39]
    roundRawFNToRecFN.io.roundingMode <= UInt<1>("h00") @[FMULADD_1G_2.scala 141:39]
    roundRawFNToRecFN.io.detectTininess <= UInt<1>("h01") @[FMULADD_1G_2.scala 142:41]
    node _T_217 = bits(roundRawFNToRecFN.io.out, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_218 = bits(_T_217, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_219 = eq(_T_218, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_220 = bits(_T_217, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_221 = eq(_T_220, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire _WIRE_3 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _WIRE_3 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_222 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_223 = and(_T_221, _T_222) @[rawFloatFromRecFN.scala 55:33]
    _WIRE_3.isNaN <= _T_223 @[rawFloatFromRecFN.scala 55:20]
    node _T_224 = bits(_T_217, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_225 = eq(_T_224, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_226 = and(_T_221, _T_225) @[rawFloatFromRecFN.scala 56:33]
    _WIRE_3.isInf <= _T_226 @[rawFloatFromRecFN.scala 56:20]
    _WIRE_3.isZero <= _T_219 @[rawFloatFromRecFN.scala 57:20]
    node _T_227 = bits(roundRawFNToRecFN.io.out, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _WIRE_3.sign <= _T_227 @[rawFloatFromRecFN.scala 58:20]
    node _T_228 = cvt(_T_217) @[rawFloatFromRecFN.scala 59:27]
    _WIRE_3.sExp <= _T_228 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_6 = eq(_T_219, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_6 = bits(roundRawFNToRecFN.io.out, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_6 = cat(UInt<1>("h00"), hi_lo_6) @[Cat.scala 30:58]
    node _T_229 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_3.sig <= _T_229 @[rawFloatFromRecFN.scala 60:20]
    node _T_230 = lt(_WIRE_3.sExp, asSInt(UInt<9>("h082"))) @[fNFromRecFN.scala 50:39]
    node _T_231 = bits(_WIRE_3.sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _T_232 = sub(UInt<1>("h01"), _T_231) @[fNFromRecFN.scala 51:39]
    node _T_233 = tail(_T_232, 1) @[fNFromRecFN.scala 51:39]
    node _T_234 = shr(_WIRE_3.sig, 1) @[fNFromRecFN.scala 52:38]
    node _T_235 = dshr(_T_234, _T_233) @[fNFromRecFN.scala 52:42]
    node _T_236 = bits(_T_235, 22, 0) @[fNFromRecFN.scala 52:60]
    node _T_237 = bits(_WIRE_3.sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _T_238 = sub(_T_237, UInt<8>("h081")) @[fNFromRecFN.scala 57:45]
    node _T_239 = tail(_T_238, 1) @[fNFromRecFN.scala 57:45]
    node _T_240 = mux(_T_230, UInt<1>("h00"), _T_239) @[fNFromRecFN.scala 55:16]
    node _T_241 = or(_WIRE_3.isNaN, _WIRE_3.isInf) @[fNFromRecFN.scala 59:44]
    node _T_242 = bits(_T_241, 0, 0) @[Bitwise.scala 72:15]
    node _T_243 = mux(_T_242, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node hi_lo_7 = or(_T_240, _T_243) @[fNFromRecFN.scala 59:15]
    node _T_244 = bits(_WIRE_3.sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _T_245 = mux(_WIRE_3.isInf, UInt<1>("h00"), _T_244) @[fNFromRecFN.scala 63:20]
    node lo_7 = mux(_T_230, _T_236, _T_245) @[fNFromRecFN.scala 61:16]
    node hi_7 = cat(_WIRE_3.sign, hi_lo_7) @[Cat.scala 30:58]
    node _T_246 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    io.out <= _T_246 @[FMULADD_1G_2.scala 143:23]
    
  module CompareRecFN : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_1 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_1 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_2 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_2 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_3 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_3 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_4 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_4 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_5 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_5 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_6 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_6 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_7 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_7 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_8 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_8 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_9 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_9 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_10 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_10 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_11 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_11 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_12 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_12 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_13 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_13 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_14 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_14 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_15 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_15 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_16 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_16 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_17 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_le_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_17 @[ValExec_CompareRecFN.scala 94:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 95:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 96:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 97:31]
    node _T_144 = or(compareRecFN.io.lt, compareRecFN.io.eq) @[ValExec_CompareRecFN.scala 99:41]
    io.actual.out <= _T_144 @[ValExec_CompareRecFN.scala 99:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 100:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 102:14]
    node _T_145 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 104:24]
    node _T_146 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 105:35]
    node _T_147 = and(_T_145, _T_146) @[ValExec_CompareRecFN.scala 104:45]
    io.pass <= _T_147 @[ValExec_CompareRecFN.scala 103:13]
    
  module CompareRecFN_18 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_lt : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_18 @[ValExec_CompareRecFN.scala 59:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 60:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 61:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 62:31]
    io.actual.out <= compareRecFN.io.lt @[ValExec_CompareRecFN.scala 64:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 65:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 67:14]
    node _T_144 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 69:24]
    node _T_145 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 70:35]
    node _T_146 = and(_T_144, _T_145) @[ValExec_CompareRecFN.scala 69:45]
    io.pass <= _T_146 @[ValExec_CompareRecFN.scala 68:13]
    
  module CompareRecFN_19 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_lt_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_19 @[ValExec_CompareRecFN.scala 59:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 60:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 61:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 62:31]
    io.actual.out <= compareRecFN.io.lt @[ValExec_CompareRecFN.scala 64:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 65:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 67:14]
    node _T_144 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 69:24]
    node _T_145 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 70:35]
    node _T_146 = and(_T_144, _T_145) @[ValExec_CompareRecFN.scala 69:45]
    io.pass <= _T_146 @[ValExec_CompareRecFN.scala 68:13]
    
  module CompareRecFN_20 : 
    output io : {flip a : UInt<33>, flip b : UInt<33>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
    
    io is invalid
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    rawA.sig <= _T_12 @[rawFloatFromRecFN.scala 60:20]
    node _T_13 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_14 = bits(_T_13, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_13, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_17 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_18 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_19 = and(_T_17, _T_18) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_19 @[rawFloatFromRecFN.scala 55:20]
    node _T_20 = bits(_T_13, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_22 = and(_T_17, _T_21) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_22 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_23 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_23 @[rawFloatFromRecFN.scala 58:20]
    node _T_24 = cvt(_T_13) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_24 @[rawFloatFromRecFN.scala 59:20]
    node hi_lo_1 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node lo_1 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node hi_1 = cat(UInt<1>("h00"), hi_lo_1) @[Cat.scala 30:58]
    node _T_25 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    rawB.sig <= _T_25 @[rawFloatFromRecFN.scala 60:20]
    node _T_26 = eq(rawA.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:19]
    node _T_27 = eq(rawB.isNaN, UInt<1>("h00")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_26, _T_27) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_28 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_29 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_30 = and(eqExps, _T_29) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_28, _T_30) @[CompareRecFN.scala 62:33]
    node _T_31 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_31) @[CompareRecFN.scala 63:32]
    node _T_32 = eq(bothZeros, UInt<1>("h00")) @[CompareRecFN.scala 66:9]
    node _T_33 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 67:28]
    node _T_34 = and(rawA.sign, _T_33) @[CompareRecFN.scala 67:25]
    node _T_35 = eq(bothInfs, UInt<1>("h00")) @[CompareRecFN.scala 68:19]
    node _T_36 = eq(common_ltMags, UInt<1>("h00")) @[CompareRecFN.scala 69:38]
    node _T_37 = and(rawA.sign, _T_36) @[CompareRecFN.scala 69:35]
    node _T_38 = eq(common_eqMags, UInt<1>("h00")) @[CompareRecFN.scala 69:57]
    node _T_39 = and(_T_37, _T_38) @[CompareRecFN.scala 69:54]
    node _T_40 = eq(rawB.sign, UInt<1>("h00")) @[CompareRecFN.scala 70:29]
    node _T_41 = and(_T_40, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_42 = or(_T_39, _T_41) @[CompareRecFN.scala 69:74]
    node _T_43 = and(_T_35, _T_42) @[CompareRecFN.scala 68:30]
    node _T_44 = or(_T_34, _T_43) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_32, _T_44) @[CompareRecFN.scala 66:21]
    node _T_45 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_46 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_47 = and(_T_45, _T_46) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_47) @[CompareRecFN.scala 72:19]
    node _T_48 = bits(rawA.sig, 22, 22) @[common.scala 81:56]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[common.scala 81:49]
    node _T_50 = and(rawA.isNaN, _T_49) @[common.scala 81:46]
    node _T_51 = bits(rawB.sig, 22, 22) @[common.scala 81:56]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[common.scala 81:49]
    node _T_53 = and(rawB.isNaN, _T_52) @[common.scala 81:46]
    node _T_54 = or(_T_50, _T_53) @[CompareRecFN.scala 75:32]
    node _T_55 = eq(ordered, UInt<1>("h00")) @[CompareRecFN.scala 76:30]
    node _T_56 = and(io.signaling, _T_55) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_54, _T_56) @[CompareRecFN.scala 75:58]
    node _T_57 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_57 @[CompareRecFN.scala 78:11]
    node _T_58 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_58 @[CompareRecFN.scala 79:11]
    node _T_59 = eq(ordered_lt, UInt<1>("h00")) @[CompareRecFN.scala 80:25]
    node _T_60 = and(ordered, _T_59) @[CompareRecFN.scala 80:22]
    node _T_61 = eq(ordered_eq, UInt<1>("h00")) @[CompareRecFN.scala 80:41]
    node _T_62 = and(_T_60, _T_61) @[CompareRecFN.scala 80:38]
    io.gt <= _T_62 @[CompareRecFN.scala 80:11]
    node _T_63 = cat(invalid, UInt<4>("h00")) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_63 @[CompareRecFN.scala 81:23]
    
  module ValExec_CompareRecF32_lt_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, expected : {flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : {out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN_20 @[ValExec_CompareRecFN.scala 59:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h014"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h013"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h012"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h011"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h010"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("h0f"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("h0e"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("h0d"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("h0c"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("h0b"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("h0a"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h09"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h08"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h07"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h06"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h05"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h04"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h03"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h02"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h01"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h00"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h080"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE is invalid @[rawFloatFromFN.scala 65:23]
    node _T_62 = eq(_T_4, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_63 = and(_T_61, _T_62) @[rawFloatFromFN.scala 66:33]
    _WIRE.isNaN <= _T_63 @[rawFloatFromFN.scala 66:20]
    node _T_64 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _WIRE.isInf <= _T_64 @[rawFloatFromFN.scala 67:20]
    _WIRE.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _WIRE.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_65 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_66 = cvt(_T_65) @[rawFloatFromFN.scala 70:48]
    _WIRE.sExp <= _T_66 @[rawFloatFromFN.scala 70:20]
    node hi_lo = eq(_T_59, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node hi = cat(UInt<1>("h00"), hi_lo) @[Cat.scala 30:58]
    node _T_67 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE.sig <= _T_67 @[rawFloatFromFN.scala 71:17]
    node _T_68 = bits(_WIRE.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_69 = mux(_WIRE.isZero, UInt<3>("h00"), _T_68) @[recFNFromFN.scala 48:16]
    node _T_70 = mux(_WIRE.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_1 = or(_T_69, _T_70) @[recFNFromFN.scala 48:79]
    node lo_hi = bits(_WIRE.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo = bits(_WIRE.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_1 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_1 = cat(_WIRE.sign, hi_lo_1) @[Cat.scala 30:58]
    node _T_71 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    compareRecFN.io.a <= _T_71 @[ValExec_CompareRecFN.scala 60:23]
    node _T_72 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_73 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_74 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_75 = eq(_T_73, UInt<1>("h00")) @[rawFloatFromFN.scala 50:34]
    node _T_76 = eq(_T_74, UInt<1>("h00")) @[rawFloatFromFN.scala 51:38]
    node _T_77 = bits(_T_74, 0, 0) @[primitives.scala 92:52]
    node _T_78 = bits(_T_74, 1, 1) @[primitives.scala 92:52]
    node _T_79 = bits(_T_74, 2, 2) @[primitives.scala 92:52]
    node _T_80 = bits(_T_74, 3, 3) @[primitives.scala 92:52]
    node _T_81 = bits(_T_74, 4, 4) @[primitives.scala 92:52]
    node _T_82 = bits(_T_74, 5, 5) @[primitives.scala 92:52]
    node _T_83 = bits(_T_74, 6, 6) @[primitives.scala 92:52]
    node _T_84 = bits(_T_74, 7, 7) @[primitives.scala 92:52]
    node _T_85 = bits(_T_74, 8, 8) @[primitives.scala 92:52]
    node _T_86 = bits(_T_74, 9, 9) @[primitives.scala 92:52]
    node _T_87 = bits(_T_74, 10, 10) @[primitives.scala 92:52]
    node _T_88 = bits(_T_74, 11, 11) @[primitives.scala 92:52]
    node _T_89 = bits(_T_74, 12, 12) @[primitives.scala 92:52]
    node _T_90 = bits(_T_74, 13, 13) @[primitives.scala 92:52]
    node _T_91 = bits(_T_74, 14, 14) @[primitives.scala 92:52]
    node _T_92 = bits(_T_74, 15, 15) @[primitives.scala 92:52]
    node _T_93 = bits(_T_74, 16, 16) @[primitives.scala 92:52]
    node _T_94 = bits(_T_74, 17, 17) @[primitives.scala 92:52]
    node _T_95 = bits(_T_74, 18, 18) @[primitives.scala 92:52]
    node _T_96 = bits(_T_74, 19, 19) @[primitives.scala 92:52]
    node _T_97 = bits(_T_74, 20, 20) @[primitives.scala 92:52]
    node _T_98 = bits(_T_74, 21, 21) @[primitives.scala 92:52]
    node _T_99 = bits(_T_74, 22, 22) @[primitives.scala 92:52]
    node _T_100 = mux(_T_78, UInt<5>("h015"), UInt<5>("h016")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_79, UInt<5>("h014"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_80, UInt<5>("h013"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_81, UInt<5>("h012"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_82, UInt<5>("h011"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_83, UInt<5>("h010"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_84, UInt<4>("h0f"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_85, UInt<4>("h0e"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_86, UInt<4>("h0d"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_87, UInt<4>("h0c"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<4>("h0b"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<4>("h0a"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<4>("h09"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<4>("h08"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<3>("h07"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<3>("h06"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<3>("h05"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<3>("h04"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<2>("h03"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<2>("h02"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<1>("h01"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<1>("h00"), _T_120) @[Mux.scala 47:69]
    node _T_122 = dshl(_T_74, _T_121) @[rawFloatFromFN.scala 54:36]
    node _T_123 = bits(_T_122, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_124 = shl(_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _T_125 = xor(_T_121, UInt<9>("h01ff")) @[rawFloatFromFN.scala 57:26]
    node _T_126 = mux(_T_75, _T_125, _T_73) @[rawFloatFromFN.scala 56:16]
    node _T_127 = mux(_T_75, UInt<2>("h02"), UInt<1>("h01")) @[rawFloatFromFN.scala 60:27]
    node _T_128 = or(UInt<8>("h080"), _T_127) @[rawFloatFromFN.scala 60:22]
    node _T_129 = add(_T_126, _T_128) @[rawFloatFromFN.scala 59:15]
    node _T_130 = tail(_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node _T_131 = and(_T_75, _T_76) @[rawFloatFromFN.scala 62:34]
    node _T_132 = bits(_T_130, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_133 = eq(_T_132, UInt<2>("h03")) @[rawFloatFromFN.scala 63:62]
    wire _WIRE_1 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _WIRE_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_134 = eq(_T_76, UInt<1>("h00")) @[rawFloatFromFN.scala 66:36]
    node _T_135 = and(_T_133, _T_134) @[rawFloatFromFN.scala 66:33]
    _WIRE_1.isNaN <= _T_135 @[rawFloatFromFN.scala 66:20]
    node _T_136 = and(_T_133, _T_76) @[rawFloatFromFN.scala 67:33]
    _WIRE_1.isInf <= _T_136 @[rawFloatFromFN.scala 67:20]
    _WIRE_1.isZero <= _T_131 @[rawFloatFromFN.scala 68:20]
    _WIRE_1.sign <= _T_72 @[rawFloatFromFN.scala 69:20]
    node _T_137 = bits(_T_130, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_138 = cvt(_T_137) @[rawFloatFromFN.scala 70:48]
    _WIRE_1.sExp <= _T_138 @[rawFloatFromFN.scala 70:20]
    node hi_lo_2 = eq(_T_131, UInt<1>("h00")) @[rawFloatFromFN.scala 72:29]
    node lo_2 = mux(_T_75, _T_124, _T_74) @[rawFloatFromFN.scala 72:42]
    node hi_2 = cat(UInt<1>("h00"), hi_lo_2) @[Cat.scala 30:58]
    node _T_139 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_1.sig <= _T_139 @[rawFloatFromFN.scala 71:17]
    node _T_140 = bits(_WIRE_1.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_141 = mux(_WIRE_1.isZero, UInt<3>("h00"), _T_140) @[recFNFromFN.scala 48:16]
    node _T_142 = mux(_WIRE_1.isNaN, UInt<1>("h01"), UInt<1>("h00")) @[recFNFromFN.scala 49:20]
    node hi_lo_3 = or(_T_141, _T_142) @[recFNFromFN.scala 48:79]
    node lo_hi_1 = bits(_WIRE_1.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node lo_lo_1 = bits(_WIRE_1.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_3 = cat(_WIRE_1.sign, hi_lo_3) @[Cat.scala 30:58]
    node _T_143 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    compareRecFN.io.b <= _T_143 @[ValExec_CompareRecFN.scala 61:23]
    compareRecFN.io.signaling <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 62:31]
    io.actual.out <= compareRecFN.io.lt @[ValExec_CompareRecFN.scala 64:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 65:30]
    io.check <= UInt<1>("h01") @[ValExec_CompareRecFN.scala 67:14]
    node _T_144 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 69:24]
    node _T_145 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 70:35]
    node _T_146 = and(_T_144, _T_145) @[ValExec_CompareRecFN.scala 69:45]
    io.pass <= _T_146 @[ValExec_CompareRecFN.scala 68:13]
    
  module ray_AABB_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ray_idir : {x : UInt<32>, y : UInt<32>, z : UInt<32>}, flip ray_ood : {x : UInt<32>, y : UInt<32>, z : UInt<32>}, flip ray_tmin : UInt<32>, flip ray_hitT : UInt<32>, flip bvh_n0xy : {x : UInt<32>, y : UInt<32>, z : UInt<32>, w : UInt<32>}, flip bvh_n1xy : {x : UInt<32>, y : UInt<32>, z : UInt<32>, w : UInt<32>}, flip bvh_nz : {x : UInt<32>, y : UInt<32>, z : UInt<32>, w : UInt<32>}, flip bvh_temp : {x : SInt<32>, y : SInt<32>}, flip rayid : UInt<32>, flip valid_en : UInt<1>, rayid_out : UInt<32>, nodeIdx_0 : SInt<32>, nodeIdx_1 : SInt<32>, nodeIdx_2 : SInt<32>, push : UInt<1>, pop : UInt<1>, leaf : UInt<1>, back : UInt<1>, hitT_out : UInt<32>, valid_out : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg traverseChild0 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 73:33]
    reg traverseChild1 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 74:33]
    reg c0lox : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 76:34]
    reg c0hix : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 77:34]
    reg c0loy : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 78:34]
    reg c0hiy : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 79:33]
    reg c0loz : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 80:34]
    reg c0hiz : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 81:34]
    reg c1lox : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 83:34]
    reg c1hix : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 84:34]
    reg c1loy : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 85:34]
    reg c1hiy : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 86:34]
    reg c1loz : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 87:34]
    reg c1hiz : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 88:34]
    reg rayid_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 90:32]
    reg hitT_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 91:33]
    reg tmin_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 92:31]
    reg valid_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 93:32]
    reg cidx_0_1 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 94:45]
    reg cidx_1_1 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 95:45]
    rayid_1 <= io.rayid @[Ray_AABB_1.scala 96:41]
    tmin_1 <= UInt<1>("h00") @[Ray_AABB_1.scala 97:41]
    hitT_1 <= io.ray_hitT @[Ray_AABB_1.scala 98:43]
    valid_1 <= io.valid_en @[Ray_AABB_1.scala 99:42]
    cidx_0_1 <= io.bvh_temp.x @[Ray_AABB_1.scala 100:44]
    cidx_1_1 <= io.bvh_temp.y @[Ray_AABB_1.scala 101:44]
    reg rayid_temp : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 103:35]
    reg hitT_temp : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 104:36]
    reg tmin_temp : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 105:34]
    reg valid_temp : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 106:35]
    hitT_temp <= hitT_1 @[Ray_AABB_1.scala 108:32]
    tmin_temp <= tmin_1 @[Ray_AABB_1.scala 109:31]
    rayid_temp <= rayid_1 @[Ray_AABB_1.scala 110:31]
    valid_temp <= valid_1 @[Ray_AABB_1.scala 111:32]
    reg cidx_0_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 113:48]
    reg cidx_1_temp : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 114:48]
    cidx_0_temp <= cidx_0_1 @[Ray_AABB_1.scala 117:41]
    cidx_1_temp <= cidx_1_1 @[Ray_AABB_1.scala 118:41]
    inst FADD_MUL_1 of MY_MULADD @[Ray_AABB_1.scala 121:33]
    FADD_MUL_1.io is invalid
    FADD_MUL_1.clock <= clock
    FADD_MUL_1.reset <= reset
    FADD_MUL_1.io.a <= io.bvh_n0xy.x @[Ray_AABB_1.scala 122:21]
    FADD_MUL_1.io.b <= io.ray_idir.x @[Ray_AABB_1.scala 123:21]
    wire _WIRE : UInt<32> @[common.scala 89:23]
    _WIRE is invalid @[common.scala 89:23]
    node _T = bits(io.ray_ood.x, 31, 31) @[common.scala 90:23]
    node hi = not(_T) @[common.scala 90:20]
    node lo = bits(io.ray_ood.x, 30, 0) @[common.scala 90:30]
    node _T_1 = cat(hi, lo) @[Cat.scala 30:58]
    _WIRE <= _T_1 @[common.scala 90:13]
    FADD_MUL_1.io.c <= _WIRE @[Ray_AABB_1.scala 124:21]
    c0lox <= FADD_MUL_1.io.out @[Ray_AABB_1.scala 129:37]
    inst FADD_MUL_2 of MY_MULADD_1 @[Ray_AABB_1.scala 131:33]
    FADD_MUL_2.io is invalid
    FADD_MUL_2.clock <= clock
    FADD_MUL_2.reset <= reset
    FADD_MUL_2.io.a <= io.bvh_n0xy.y @[Ray_AABB_1.scala 132:21]
    FADD_MUL_2.io.b <= io.ray_idir.x @[Ray_AABB_1.scala 133:21]
    wire _WIRE_1 : UInt<32> @[common.scala 89:23]
    _WIRE_1 is invalid @[common.scala 89:23]
    node _T_2 = bits(io.ray_ood.x, 31, 31) @[common.scala 90:23]
    node hi_1 = not(_T_2) @[common.scala 90:20]
    node lo_1 = bits(io.ray_ood.x, 30, 0) @[common.scala 90:30]
    node _T_3 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    _WIRE_1 <= _T_3 @[common.scala 90:13]
    FADD_MUL_2.io.c <= _WIRE_1 @[Ray_AABB_1.scala 134:21]
    c0hix <= FADD_MUL_2.io.out @[Ray_AABB_1.scala 139:37]
    inst FADD_MUL_3 of MY_MULADD_2 @[Ray_AABB_1.scala 141:33]
    FADD_MUL_3.io is invalid
    FADD_MUL_3.clock <= clock
    FADD_MUL_3.reset <= reset
    FADD_MUL_3.io.a <= io.bvh_n0xy.z @[Ray_AABB_1.scala 142:21]
    FADD_MUL_3.io.b <= io.ray_idir.y @[Ray_AABB_1.scala 143:21]
    wire _WIRE_2 : UInt<32> @[common.scala 89:23]
    _WIRE_2 is invalid @[common.scala 89:23]
    node _T_4 = bits(io.ray_ood.y, 31, 31) @[common.scala 90:23]
    node hi_2 = not(_T_4) @[common.scala 90:20]
    node lo_2 = bits(io.ray_ood.y, 30, 0) @[common.scala 90:30]
    node _T_5 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    _WIRE_2 <= _T_5 @[common.scala 90:13]
    FADD_MUL_3.io.c <= _WIRE_2 @[Ray_AABB_1.scala 144:21]
    c0loy <= FADD_MUL_3.io.out @[Ray_AABB_1.scala 149:37]
    inst FADD_MUL_4 of MY_MULADD_3 @[Ray_AABB_1.scala 151:33]
    FADD_MUL_4.io is invalid
    FADD_MUL_4.clock <= clock
    FADD_MUL_4.reset <= reset
    FADD_MUL_4.io.a <= io.bvh_n0xy.w @[Ray_AABB_1.scala 152:21]
    FADD_MUL_4.io.b <= io.ray_idir.y @[Ray_AABB_1.scala 153:21]
    wire _WIRE_3 : UInt<32> @[common.scala 89:23]
    _WIRE_3 is invalid @[common.scala 89:23]
    node _T_6 = bits(io.ray_ood.y, 31, 31) @[common.scala 90:23]
    node hi_3 = not(_T_6) @[common.scala 90:20]
    node lo_3 = bits(io.ray_ood.y, 30, 0) @[common.scala 90:30]
    node _T_7 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    _WIRE_3 <= _T_7 @[common.scala 90:13]
    FADD_MUL_4.io.c <= _WIRE_3 @[Ray_AABB_1.scala 154:21]
    c0hiy <= FADD_MUL_4.io.out @[Ray_AABB_1.scala 159:37]
    inst FADD_MUL_5 of MY_MULADD_4 @[Ray_AABB_1.scala 161:33]
    FADD_MUL_5.io is invalid
    FADD_MUL_5.clock <= clock
    FADD_MUL_5.reset <= reset
    FADD_MUL_5.io.a <= io.bvh_nz.x @[Ray_AABB_1.scala 162:21]
    FADD_MUL_5.io.b <= io.ray_idir.z @[Ray_AABB_1.scala 163:21]
    wire _WIRE_4 : UInt<32> @[common.scala 89:23]
    _WIRE_4 is invalid @[common.scala 89:23]
    node _T_8 = bits(io.ray_ood.z, 31, 31) @[common.scala 90:23]
    node hi_4 = not(_T_8) @[common.scala 90:20]
    node lo_4 = bits(io.ray_ood.z, 30, 0) @[common.scala 90:30]
    node _T_9 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    _WIRE_4 <= _T_9 @[common.scala 90:13]
    FADD_MUL_5.io.c <= _WIRE_4 @[Ray_AABB_1.scala 164:21]
    c0loz <= FADD_MUL_5.io.out @[Ray_AABB_1.scala 169:37]
    inst FADD_MUL_6 of MY_MULADD_5 @[Ray_AABB_1.scala 171:33]
    FADD_MUL_6.io is invalid
    FADD_MUL_6.clock <= clock
    FADD_MUL_6.reset <= reset
    FADD_MUL_6.io.a <= io.bvh_nz.y @[Ray_AABB_1.scala 172:21]
    FADD_MUL_6.io.b <= io.ray_idir.z @[Ray_AABB_1.scala 173:21]
    wire _WIRE_5 : UInt<32> @[common.scala 89:23]
    _WIRE_5 is invalid @[common.scala 89:23]
    node _T_10 = bits(io.ray_ood.z, 31, 31) @[common.scala 90:23]
    node hi_5 = not(_T_10) @[common.scala 90:20]
    node lo_5 = bits(io.ray_ood.z, 30, 0) @[common.scala 90:30]
    node _T_11 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    _WIRE_5 <= _T_11 @[common.scala 90:13]
    FADD_MUL_6.io.c <= _WIRE_5 @[Ray_AABB_1.scala 174:21]
    c0hiz <= FADD_MUL_6.io.out @[Ray_AABB_1.scala 179:37]
    inst FADD_MUL_7 of MY_MULADD_6 @[Ray_AABB_1.scala 181:33]
    FADD_MUL_7.io is invalid
    FADD_MUL_7.clock <= clock
    FADD_MUL_7.reset <= reset
    FADD_MUL_7.io.a <= io.bvh_n1xy.x @[Ray_AABB_1.scala 182:21]
    FADD_MUL_7.io.b <= io.ray_idir.x @[Ray_AABB_1.scala 183:21]
    wire _WIRE_6 : UInt<32> @[common.scala 89:23]
    _WIRE_6 is invalid @[common.scala 89:23]
    node _T_12 = bits(io.ray_ood.x, 31, 31) @[common.scala 90:23]
    node hi_6 = not(_T_12) @[common.scala 90:20]
    node lo_6 = bits(io.ray_ood.x, 30, 0) @[common.scala 90:30]
    node _T_13 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    _WIRE_6 <= _T_13 @[common.scala 90:13]
    FADD_MUL_7.io.c <= _WIRE_6 @[Ray_AABB_1.scala 184:21]
    c1lox <= FADD_MUL_7.io.out @[Ray_AABB_1.scala 189:37]
    inst FADD_MUL_8 of MY_MULADD_7 @[Ray_AABB_1.scala 191:33]
    FADD_MUL_8.io is invalid
    FADD_MUL_8.clock <= clock
    FADD_MUL_8.reset <= reset
    FADD_MUL_8.io.a <= io.bvh_n1xy.y @[Ray_AABB_1.scala 192:21]
    FADD_MUL_8.io.b <= io.ray_idir.x @[Ray_AABB_1.scala 193:21]
    wire _WIRE_7 : UInt<32> @[common.scala 89:23]
    _WIRE_7 is invalid @[common.scala 89:23]
    node _T_14 = bits(io.ray_ood.x, 31, 31) @[common.scala 90:23]
    node hi_7 = not(_T_14) @[common.scala 90:20]
    node lo_7 = bits(io.ray_ood.x, 30, 0) @[common.scala 90:30]
    node _T_15 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    _WIRE_7 <= _T_15 @[common.scala 90:13]
    FADD_MUL_8.io.c <= _WIRE_7 @[Ray_AABB_1.scala 194:21]
    c1hix <= FADD_MUL_8.io.out @[Ray_AABB_1.scala 199:37]
    inst FADD_MUL_9 of MY_MULADD_8 @[Ray_AABB_1.scala 201:33]
    FADD_MUL_9.io is invalid
    FADD_MUL_9.clock <= clock
    FADD_MUL_9.reset <= reset
    FADD_MUL_9.io.a <= io.bvh_n1xy.z @[Ray_AABB_1.scala 202:21]
    FADD_MUL_9.io.b <= io.ray_idir.y @[Ray_AABB_1.scala 203:21]
    wire _WIRE_8 : UInt<32> @[common.scala 89:23]
    _WIRE_8 is invalid @[common.scala 89:23]
    node _T_16 = bits(io.ray_ood.y, 31, 31) @[common.scala 90:23]
    node hi_8 = not(_T_16) @[common.scala 90:20]
    node lo_8 = bits(io.ray_ood.y, 30, 0) @[common.scala 90:30]
    node _T_17 = cat(hi_8, lo_8) @[Cat.scala 30:58]
    _WIRE_8 <= _T_17 @[common.scala 90:13]
    FADD_MUL_9.io.c <= _WIRE_8 @[Ray_AABB_1.scala 204:21]
    c1loy <= FADD_MUL_9.io.out @[Ray_AABB_1.scala 209:37]
    inst FADD_MUL_10 of MY_MULADD_9 @[Ray_AABB_1.scala 211:33]
    FADD_MUL_10.io is invalid
    FADD_MUL_10.clock <= clock
    FADD_MUL_10.reset <= reset
    FADD_MUL_10.io.a <= io.bvh_n1xy.w @[Ray_AABB_1.scala 212:22]
    FADD_MUL_10.io.b <= io.ray_idir.y @[Ray_AABB_1.scala 213:22]
    wire _WIRE_9 : UInt<32> @[common.scala 89:23]
    _WIRE_9 is invalid @[common.scala 89:23]
    node _T_18 = bits(io.ray_ood.y, 31, 31) @[common.scala 90:23]
    node hi_9 = not(_T_18) @[common.scala 90:20]
    node lo_9 = bits(io.ray_ood.y, 30, 0) @[common.scala 90:30]
    node _T_19 = cat(hi_9, lo_9) @[Cat.scala 30:58]
    _WIRE_9 <= _T_19 @[common.scala 90:13]
    FADD_MUL_10.io.c <= _WIRE_9 @[Ray_AABB_1.scala 214:22]
    c1hiy <= FADD_MUL_10.io.out @[Ray_AABB_1.scala 219:37]
    inst FADD_MUL_11 of MY_MULADD_10 @[Ray_AABB_1.scala 221:33]
    FADD_MUL_11.io is invalid
    FADD_MUL_11.clock <= clock
    FADD_MUL_11.reset <= reset
    FADD_MUL_11.io.a <= io.bvh_nz.z @[Ray_AABB_1.scala 222:22]
    FADD_MUL_11.io.b <= io.ray_idir.z @[Ray_AABB_1.scala 223:22]
    wire _WIRE_10 : UInt<32> @[common.scala 89:23]
    _WIRE_10 is invalid @[common.scala 89:23]
    node _T_20 = bits(io.ray_ood.z, 31, 31) @[common.scala 90:23]
    node hi_10 = not(_T_20) @[common.scala 90:20]
    node lo_10 = bits(io.ray_ood.z, 30, 0) @[common.scala 90:30]
    node _T_21 = cat(hi_10, lo_10) @[Cat.scala 30:58]
    _WIRE_10 <= _T_21 @[common.scala 90:13]
    FADD_MUL_11.io.c <= _WIRE_10 @[Ray_AABB_1.scala 224:22]
    c1loz <= FADD_MUL_11.io.out @[Ray_AABB_1.scala 229:37]
    inst FADD_MUL_12 of MY_MULADD_11 @[Ray_AABB_1.scala 231:33]
    FADD_MUL_12.io is invalid
    FADD_MUL_12.clock <= clock
    FADD_MUL_12.reset <= reset
    FADD_MUL_12.io.a <= io.bvh_nz.w @[Ray_AABB_1.scala 232:22]
    FADD_MUL_12.io.b <= io.ray_idir.z @[Ray_AABB_1.scala 233:22]
    wire _WIRE_11 : UInt<32> @[common.scala 89:23]
    _WIRE_11 is invalid @[common.scala 89:23]
    node _T_22 = bits(io.ray_ood.z, 31, 31) @[common.scala 90:23]
    node hi_11 = not(_T_22) @[common.scala 90:20]
    node lo_11 = bits(io.ray_ood.z, 30, 0) @[common.scala 90:30]
    node _T_23 = cat(hi_11, lo_11) @[Cat.scala 30:58]
    _WIRE_11 <= _T_23 @[common.scala 90:13]
    FADD_MUL_12.io.c <= _WIRE_11 @[Ray_AABB_1.scala 234:22]
    c1hiz <= FADD_MUL_12.io.out @[Ray_AABB_1.scala 239:37]
    reg cidx_0_2 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 242:45]
    reg cidx_1_2 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 243:45]
    cidx_0_2 <= cidx_0_temp @[Ray_AABB_1.scala 249:38]
    cidx_1_2 <= cidx_1_temp @[Ray_AABB_1.scala 250:38]
    reg rayid_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 256:32]
    reg hitT_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 257:33]
    reg tmin_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 258:31]
    reg valid_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 259:32]
    hitT_2 <= hitT_temp @[Ray_AABB_1.scala 261:29]
    tmin_2 <= tmin_temp @[Ray_AABB_1.scala 262:28]
    rayid_2 <= rayid_temp @[Ray_AABB_1.scala 263:28]
    valid_2 <= valid_temp @[Ray_AABB_1.scala 264:29]
    reg cmpMin0_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 266:28]
    reg cmpMin0_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 267:28]
    reg cmpMin0_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 268:28]
    reg cmpMax0_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 269:28]
    reg cmpMax0_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 270:28]
    reg cmpMax0_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 271:28]
    reg cmpMin1_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 272:28]
    reg cmpMin1_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 273:28]
    reg cmpMin1_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 274:28]
    reg cmpMax1_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 275:28]
    reg cmpMax1_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 276:28]
    reg cmpMax1_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 277:28]
    inst FCMP_1 of ValExec_CompareRecF32_le @[Ray_AABB_1.scala 279:24]
    FCMP_1.io is invalid
    FCMP_1.clock <= clock
    FCMP_1.reset <= reset
    FCMP_1.io.a <= c0lox @[Ray_AABB_1.scala 280:21]
    FCMP_1.io.b <= c0hix @[Ray_AABB_1.scala 281:21]
    FCMP_1.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 282:32]
    FCMP_1.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 283:43]
    node _T_24 = eq(FCMP_1.io.actual.out, UInt<1>("h01")) @[Ray_AABB_1.scala 284:47]
    node _T_25 = mux(_T_24, c0lox, c0hix) @[Ray_AABB_1.scala 284:25]
    cmpMin0_1 <= _T_25 @[Ray_AABB_1.scala 284:19]
    node _T_26 = eq(FCMP_1.io.actual.out, UInt<1>("h01")) @[Ray_AABB_1.scala 285:47]
    node _T_27 = mux(_T_26, c0hix, c0lox) @[Ray_AABB_1.scala 285:25]
    cmpMax0_1 <= _T_27 @[Ray_AABB_1.scala 285:19]
    inst FCMP_2 of ValExec_CompareRecF32_le_1 @[Ray_AABB_1.scala 294:24]
    FCMP_2.io is invalid
    FCMP_2.clock <= clock
    FCMP_2.reset <= reset
    FCMP_2.io.a <= c0loy @[Ray_AABB_1.scala 295:21]
    FCMP_2.io.b <= c0hiy @[Ray_AABB_1.scala 296:21]
    FCMP_2.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 297:32]
    FCMP_2.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 298:43]
    node _T_28 = gt(FCMP_2.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 299:35]
    when _T_28 : @[Ray_AABB_1.scala 299:41]
      cmpMin0_2 <= c0loy @[Ray_AABB_1.scala 300:23]
      cmpMax0_2 <= c0hiy @[Ray_AABB_1.scala 301:23]
      skip @[Ray_AABB_1.scala 299:41]
    else : @[Ray_AABB_1.scala 302:21]
      cmpMin0_2 <= c0hiy @[Ray_AABB_1.scala 303:23]
      cmpMax0_2 <= c0loy @[Ray_AABB_1.scala 304:23]
      skip @[Ray_AABB_1.scala 302:21]
    inst FCMP_3 of ValExec_CompareRecF32_le_2 @[Ray_AABB_1.scala 307:24]
    FCMP_3.io is invalid
    FCMP_3.clock <= clock
    FCMP_3.reset <= reset
    FCMP_3.io.a <= c0loz @[Ray_AABB_1.scala 308:21]
    FCMP_3.io.b <= c0hiz @[Ray_AABB_1.scala 309:21]
    FCMP_3.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 310:32]
    FCMP_3.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 311:43]
    node _T_29 = gt(FCMP_3.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 312:35]
    when _T_29 : @[Ray_AABB_1.scala 312:41]
      cmpMin0_3 <= c0loz @[Ray_AABB_1.scala 313:23]
      cmpMax0_3 <= c0hiz @[Ray_AABB_1.scala 314:23]
      skip @[Ray_AABB_1.scala 312:41]
    else : @[Ray_AABB_1.scala 315:21]
      cmpMin0_3 <= c0hiz @[Ray_AABB_1.scala 316:23]
      cmpMax0_3 <= c0loz @[Ray_AABB_1.scala 317:23]
      skip @[Ray_AABB_1.scala 315:21]
    inst FCMP_4 of ValExec_CompareRecF32_le_3 @[Ray_AABB_1.scala 320:24]
    FCMP_4.io is invalid
    FCMP_4.clock <= clock
    FCMP_4.reset <= reset
    FCMP_4.io.a <= c1lox @[Ray_AABB_1.scala 321:21]
    FCMP_4.io.b <= c1hix @[Ray_AABB_1.scala 322:21]
    FCMP_4.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 323:32]
    FCMP_4.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 324:43]
    node _T_30 = gt(FCMP_4.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 325:35]
    when _T_30 : @[Ray_AABB_1.scala 325:41]
      cmpMin1_1 <= c1lox @[Ray_AABB_1.scala 326:23]
      cmpMax1_1 <= c1hix @[Ray_AABB_1.scala 327:23]
      skip @[Ray_AABB_1.scala 325:41]
    else : @[Ray_AABB_1.scala 328:21]
      cmpMin1_1 <= c1hix @[Ray_AABB_1.scala 329:23]
      cmpMax1_1 <= c1lox @[Ray_AABB_1.scala 330:23]
      skip @[Ray_AABB_1.scala 328:21]
    inst FCMP_5 of ValExec_CompareRecF32_le_4 @[Ray_AABB_1.scala 333:25]
    FCMP_5.io is invalid
    FCMP_5.clock <= clock
    FCMP_5.reset <= reset
    FCMP_5.io.a <= c1loy @[Ray_AABB_1.scala 334:21]
    FCMP_5.io.b <= c1hiy @[Ray_AABB_1.scala 335:21]
    FCMP_5.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 336:32]
    FCMP_5.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 337:43]
    node _T_31 = gt(FCMP_5.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 338:35]
    when _T_31 : @[Ray_AABB_1.scala 338:41]
      cmpMin1_2 <= c1loy @[Ray_AABB_1.scala 339:23]
      cmpMax1_2 <= c1hiy @[Ray_AABB_1.scala 340:23]
      skip @[Ray_AABB_1.scala 338:41]
    else : @[Ray_AABB_1.scala 341:21]
      cmpMin1_2 <= c1hiy @[Ray_AABB_1.scala 342:23]
      cmpMax1_2 <= c1loy @[Ray_AABB_1.scala 343:23]
      skip @[Ray_AABB_1.scala 341:21]
    inst FCMP_6 of ValExec_CompareRecF32_le_5 @[Ray_AABB_1.scala 346:24]
    FCMP_6.io is invalid
    FCMP_6.clock <= clock
    FCMP_6.reset <= reset
    FCMP_6.io.a <= c1loz @[Ray_AABB_1.scala 347:21]
    FCMP_6.io.b <= c1hiz @[Ray_AABB_1.scala 348:21]
    FCMP_6.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 349:32]
    FCMP_6.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 350:43]
    node _T_32 = gt(FCMP_6.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 351:35]
    when _T_32 : @[Ray_AABB_1.scala 351:41]
      cmpMin1_3 <= c1loz @[Ray_AABB_1.scala 352:23]
      cmpMax1_3 <= c1hiz @[Ray_AABB_1.scala 353:23]
      skip @[Ray_AABB_1.scala 351:41]
    else : @[Ray_AABB_1.scala 354:21]
      cmpMin1_3 <= c1hiz @[Ray_AABB_1.scala 355:23]
      cmpMax1_3 <= c1loz @[Ray_AABB_1.scala 356:23]
      skip @[Ray_AABB_1.scala 354:21]
    reg c0Min_temp_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 360:31]
    reg c0Min_temp_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 361:31]
    reg c0Max_temp_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 362:31]
    reg c0Max_temp_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 363:31]
    reg c1Min_temp_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 364:31]
    reg c1Min_temp_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 365:31]
    reg c1Max_temp_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 366:31]
    reg c1Max_temp_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 367:31]
    reg cidx_0_3 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 369:45]
    reg cidx_1_3 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 370:45]
    cidx_0_3 <= cidx_0_2 @[Ray_AABB_1.scala 377:38]
    cidx_1_3 <= cidx_1_2 @[Ray_AABB_1.scala 378:38]
    reg hitT_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 384:49]
    hitT_3 <= hitT_2 @[Ray_AABB_1.scala 385:42]
    reg rayid_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 386:48]
    rayid_3 <= rayid_2 @[Ray_AABB_1.scala 387:41]
    reg valid_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 388:49]
    valid_3 <= valid_2 @[Ray_AABB_1.scala 389:41]
    inst FCMP_7 of ValExec_CompareRecF32_le_6 @[Ray_AABB_1.scala 391:24]
    FCMP_7.io is invalid
    FCMP_7.clock <= clock
    FCMP_7.reset <= reset
    FCMP_7.io.a <= cmpMin0_1 @[Ray_AABB_1.scala 392:21]
    FCMP_7.io.b <= cmpMin0_2 @[Ray_AABB_1.scala 393:21]
    FCMP_7.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 394:32]
    FCMP_7.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 395:43]
    node _T_33 = gt(FCMP_7.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 396:35]
    when _T_33 : @[Ray_AABB_1.scala 396:41]
      c0Min_temp_1 <= cmpMin0_2 @[Ray_AABB_1.scala 397:26]
      skip @[Ray_AABB_1.scala 396:41]
    else : @[Ray_AABB_1.scala 398:21]
      c0Min_temp_1 <= cmpMin0_1 @[Ray_AABB_1.scala 399:26]
      skip @[Ray_AABB_1.scala 398:21]
    inst FCMP_8 of ValExec_CompareRecF32_le_7 @[Ray_AABB_1.scala 402:24]
    FCMP_8.io is invalid
    FCMP_8.clock <= clock
    FCMP_8.reset <= reset
    FCMP_8.io.a <= cmpMin0_3 @[Ray_AABB_1.scala 403:21]
    FCMP_8.io.b <= tmin_2 @[Ray_AABB_1.scala 404:21]
    FCMP_8.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 405:32]
    FCMP_8.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 406:43]
    node _T_34 = gt(FCMP_8.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 407:35]
    when _T_34 : @[Ray_AABB_1.scala 407:41]
      c0Min_temp_2 <= tmin_2 @[Ray_AABB_1.scala 408:26]
      skip @[Ray_AABB_1.scala 407:41]
    else : @[Ray_AABB_1.scala 409:21]
      c0Min_temp_2 <= cmpMin0_3 @[Ray_AABB_1.scala 410:26]
      skip @[Ray_AABB_1.scala 409:21]
    inst FCMP_9 of ValExec_CompareRecF32_le_8 @[Ray_AABB_1.scala 413:24]
    FCMP_9.io is invalid
    FCMP_9.clock <= clock
    FCMP_9.reset <= reset
    FCMP_9.io.a <= cmpMax0_1 @[Ray_AABB_1.scala 414:21]
    FCMP_9.io.b <= cmpMax0_2 @[Ray_AABB_1.scala 415:21]
    FCMP_9.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 416:32]
    FCMP_9.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 417:43]
    node _T_35 = gt(FCMP_9.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 418:35]
    when _T_35 : @[Ray_AABB_1.scala 418:41]
      c0Max_temp_1 <= cmpMax0_1 @[Ray_AABB_1.scala 419:26]
      skip @[Ray_AABB_1.scala 418:41]
    else : @[Ray_AABB_1.scala 420:21]
      c0Max_temp_1 <= cmpMax0_2 @[Ray_AABB_1.scala 421:26]
      skip @[Ray_AABB_1.scala 420:21]
    inst FCMP_10 of ValExec_CompareRecF32_le_9 @[Ray_AABB_1.scala 424:25]
    FCMP_10.io is invalid
    FCMP_10.clock <= clock
    FCMP_10.reset <= reset
    FCMP_10.io.a <= cmpMax0_3 @[Ray_AABB_1.scala 425:22]
    FCMP_10.io.b <= hitT_2 @[Ray_AABB_1.scala 426:22]
    FCMP_10.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 427:33]
    FCMP_10.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 428:44]
    node _T_36 = gt(FCMP_10.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 429:36]
    when _T_36 : @[Ray_AABB_1.scala 429:42]
      c0Max_temp_2 <= cmpMax0_3 @[Ray_AABB_1.scala 430:26]
      skip @[Ray_AABB_1.scala 429:42]
    else : @[Ray_AABB_1.scala 431:21]
      c0Max_temp_2 <= hitT_2 @[Ray_AABB_1.scala 432:26]
      skip @[Ray_AABB_1.scala 431:21]
    inst FCMP_11 of ValExec_CompareRecF32_le_10 @[Ray_AABB_1.scala 435:25]
    FCMP_11.io is invalid
    FCMP_11.clock <= clock
    FCMP_11.reset <= reset
    FCMP_11.io.a <= cmpMin1_1 @[Ray_AABB_1.scala 436:22]
    FCMP_11.io.b <= cmpMin1_2 @[Ray_AABB_1.scala 437:22]
    FCMP_11.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 438:33]
    FCMP_11.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 439:44]
    node _T_37 = gt(FCMP_11.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 440:36]
    when _T_37 : @[Ray_AABB_1.scala 440:42]
      c1Min_temp_1 <= cmpMin1_2 @[Ray_AABB_1.scala 441:26]
      skip @[Ray_AABB_1.scala 440:42]
    else : @[Ray_AABB_1.scala 442:21]
      c1Min_temp_1 <= cmpMin1_1 @[Ray_AABB_1.scala 443:26]
      skip @[Ray_AABB_1.scala 442:21]
    inst FCMP_12 of ValExec_CompareRecF32_le_11 @[Ray_AABB_1.scala 446:25]
    FCMP_12.io is invalid
    FCMP_12.clock <= clock
    FCMP_12.reset <= reset
    FCMP_12.io.a <= cmpMin1_3 @[Ray_AABB_1.scala 447:22]
    FCMP_12.io.b <= tmin_2 @[Ray_AABB_1.scala 448:22]
    FCMP_12.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 449:33]
    FCMP_12.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 450:44]
    node _T_38 = gt(FCMP_12.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 451:36]
    when _T_38 : @[Ray_AABB_1.scala 451:42]
      c1Min_temp_2 <= tmin_2 @[Ray_AABB_1.scala 452:26]
      skip @[Ray_AABB_1.scala 451:42]
    else : @[Ray_AABB_1.scala 453:21]
      c1Min_temp_2 <= cmpMin1_3 @[Ray_AABB_1.scala 454:26]
      skip @[Ray_AABB_1.scala 453:21]
    inst FCMP_13 of ValExec_CompareRecF32_le_12 @[Ray_AABB_1.scala 457:25]
    FCMP_13.io is invalid
    FCMP_13.clock <= clock
    FCMP_13.reset <= reset
    FCMP_13.io.a <= cmpMax1_1 @[Ray_AABB_1.scala 458:22]
    FCMP_13.io.b <= cmpMax1_2 @[Ray_AABB_1.scala 459:22]
    FCMP_13.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 460:33]
    FCMP_13.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 461:44]
    node _T_39 = gt(FCMP_13.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 462:36]
    when _T_39 : @[Ray_AABB_1.scala 462:42]
      c1Max_temp_1 <= cmpMax1_1 @[Ray_AABB_1.scala 463:26]
      skip @[Ray_AABB_1.scala 462:42]
    else : @[Ray_AABB_1.scala 464:21]
      c1Max_temp_1 <= cmpMax1_2 @[Ray_AABB_1.scala 465:26]
      skip @[Ray_AABB_1.scala 464:21]
    inst FCMP_14 of ValExec_CompareRecF32_le_13 @[Ray_AABB_1.scala 468:25]
    FCMP_14.io is invalid
    FCMP_14.clock <= clock
    FCMP_14.reset <= reset
    FCMP_14.io.a <= cmpMax1_3 @[Ray_AABB_1.scala 469:22]
    FCMP_14.io.b <= hitT_2 @[Ray_AABB_1.scala 470:22]
    FCMP_14.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 471:33]
    FCMP_14.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 472:44]
    node _T_40 = gt(FCMP_14.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 473:36]
    when _T_40 : @[Ray_AABB_1.scala 473:42]
      c1Max_temp_2 <= cmpMax1_3 @[Ray_AABB_1.scala 474:26]
      skip @[Ray_AABB_1.scala 473:42]
    else : @[Ray_AABB_1.scala 475:21]
      c1Max_temp_2 <= hitT_2 @[Ray_AABB_1.scala 476:26]
      skip @[Ray_AABB_1.scala 475:21]
    reg c0Min : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 479:24]
    reg c0Max : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 480:24]
    reg c1Min : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 481:24]
    reg c1Max : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 482:24]
    reg cidx_0_4 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 484:45]
    reg cidx_1_4 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 485:45]
    cidx_0_4 <= cidx_0_3 @[Ray_AABB_1.scala 492:38]
    cidx_1_4 <= cidx_1_3 @[Ray_AABB_1.scala 493:38]
    reg hitT_4 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 499:49]
    hitT_4 <= hitT_3 @[Ray_AABB_1.scala 500:43]
    reg rayid_4 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 501:48]
    rayid_4 <= rayid_3 @[Ray_AABB_1.scala 502:42]
    reg valid_4 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 503:49]
    valid_4 <= valid_3 @[Ray_AABB_1.scala 504:41]
    inst FCMP_15 of ValExec_CompareRecF32_le_14 @[Ray_AABB_1.scala 506:25]
    FCMP_15.io is invalid
    FCMP_15.clock <= clock
    FCMP_15.reset <= reset
    FCMP_15.io.a <= c0Min_temp_1 @[Ray_AABB_1.scala 507:22]
    FCMP_15.io.b <= c0Min_temp_2 @[Ray_AABB_1.scala 508:22]
    FCMP_15.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 509:33]
    FCMP_15.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 510:44]
    node _T_41 = gt(FCMP_15.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 511:36]
    when _T_41 : @[Ray_AABB_1.scala 511:42]
      c0Min <= c0Min_temp_2 @[Ray_AABB_1.scala 512:19]
      skip @[Ray_AABB_1.scala 511:42]
    else : @[Ray_AABB_1.scala 513:21]
      c0Min <= c0Min_temp_1 @[Ray_AABB_1.scala 514:19]
      skip @[Ray_AABB_1.scala 513:21]
    inst FCMP_16 of ValExec_CompareRecF32_le_15 @[Ray_AABB_1.scala 517:25]
    FCMP_16.io is invalid
    FCMP_16.clock <= clock
    FCMP_16.reset <= reset
    FCMP_16.io.a <= c0Max_temp_1 @[Ray_AABB_1.scala 518:22]
    FCMP_16.io.b <= c0Max_temp_2 @[Ray_AABB_1.scala 519:22]
    FCMP_16.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 520:33]
    FCMP_16.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 521:44]
    node _T_42 = gt(FCMP_16.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 522:36]
    when _T_42 : @[Ray_AABB_1.scala 522:42]
      c0Max <= c0Max_temp_1 @[Ray_AABB_1.scala 523:19]
      skip @[Ray_AABB_1.scala 522:42]
    else : @[Ray_AABB_1.scala 524:21]
      c0Max <= c0Max_temp_2 @[Ray_AABB_1.scala 525:19]
      skip @[Ray_AABB_1.scala 524:21]
    inst FCMP_17 of ValExec_CompareRecF32_le_16 @[Ray_AABB_1.scala 528:25]
    FCMP_17.io is invalid
    FCMP_17.clock <= clock
    FCMP_17.reset <= reset
    FCMP_17.io.a <= c1Min_temp_1 @[Ray_AABB_1.scala 529:22]
    FCMP_17.io.b <= c1Min_temp_2 @[Ray_AABB_1.scala 530:22]
    FCMP_17.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 531:33]
    FCMP_17.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 532:44]
    node _T_43 = gt(FCMP_17.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 533:36]
    when _T_43 : @[Ray_AABB_1.scala 533:42]
      c1Min <= c1Min_temp_2 @[Ray_AABB_1.scala 534:19]
      skip @[Ray_AABB_1.scala 533:42]
    else : @[Ray_AABB_1.scala 535:21]
      c1Min <= c1Min_temp_1 @[Ray_AABB_1.scala 536:19]
      skip @[Ray_AABB_1.scala 535:21]
    inst FCMP_18 of ValExec_CompareRecF32_le_17 @[Ray_AABB_1.scala 539:25]
    FCMP_18.io is invalid
    FCMP_18.clock <= clock
    FCMP_18.reset <= reset
    FCMP_18.io.a <= c1Max_temp_1 @[Ray_AABB_1.scala 540:22]
    FCMP_18.io.b <= c1Max_temp_2 @[Ray_AABB_1.scala 541:22]
    FCMP_18.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 542:33]
    FCMP_18.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 543:44]
    node _T_44 = gt(FCMP_18.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 544:36]
    when _T_44 : @[Ray_AABB_1.scala 544:42]
      c1Max <= c1Max_temp_1 @[Ray_AABB_1.scala 545:19]
      skip @[Ray_AABB_1.scala 544:42]
    else : @[Ray_AABB_1.scala 546:21]
      c1Max <= c1Max_temp_2 @[Ray_AABB_1.scala 547:19]
      skip @[Ray_AABB_1.scala 546:21]
    reg rayid_5 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 551:48]
    rayid_5 <= rayid_4 @[Ray_AABB_1.scala 552:42]
    reg hitT_5 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 553:49]
    hitT_5 <= hitT_4 @[Ray_AABB_1.scala 554:42]
    reg valid_5 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 555:49]
    valid_5 <= valid_4 @[Ray_AABB_1.scala 556:41]
    reg cidx_0_5 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 560:45]
    reg cidx_1_5 : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[Ray_AABB_1.scala 561:45]
    reg swp : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Ray_AABB_1.scala 567:49]
    reg c0Min_5 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 568:45]
    reg c1Min_5 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Ray_AABB_1.scala 569:45]
    cidx_0_5 <= cidx_0_4 @[Ray_AABB_1.scala 572:38]
    cidx_1_5 <= cidx_1_4 @[Ray_AABB_1.scala 573:38]
    inst FCMP_19 of ValExec_CompareRecF32_lt @[Ray_AABB_1.scala 582:25]
    FCMP_19.io is invalid
    FCMP_19.clock <= clock
    FCMP_19.reset <= reset
    FCMP_19.io.a <= c0Max @[Ray_AABB_1.scala 583:22]
    FCMP_19.io.b <= c0Min @[Ray_AABB_1.scala 584:22]
    FCMP_19.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 585:33]
    FCMP_19.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 586:44]
    node _T_45 = gt(FCMP_19.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 587:36]
    when _T_45 : @[Ray_AABB_1.scala 587:42]
      traverseChild0 <= UInt<1>("h00") @[Ray_AABB_1.scala 588:28]
      skip @[Ray_AABB_1.scala 587:42]
    else : @[Ray_AABB_1.scala 589:21]
      traverseChild0 <= UInt<1>("h01") @[Ray_AABB_1.scala 590:28]
      skip @[Ray_AABB_1.scala 589:21]
    inst FCMP_20 of ValExec_CompareRecF32_lt_1 @[Ray_AABB_1.scala 595:25]
    FCMP_20.io is invalid
    FCMP_20.clock <= clock
    FCMP_20.reset <= reset
    FCMP_20.io.a <= c1Max @[Ray_AABB_1.scala 596:22]
    FCMP_20.io.b <= c1Min @[Ray_AABB_1.scala 597:22]
    FCMP_20.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 598:33]
    FCMP_20.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 599:44]
    node _T_46 = gt(FCMP_20.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 600:36]
    when _T_46 : @[Ray_AABB_1.scala 600:42]
      traverseChild1 <= UInt<1>("h00") @[Ray_AABB_1.scala 601:28]
      skip @[Ray_AABB_1.scala 600:42]
    else : @[Ray_AABB_1.scala 602:21]
      traverseChild1 <= UInt<1>("h01") @[Ray_AABB_1.scala 603:28]
      skip @[Ray_AABB_1.scala 602:21]
    inst FCMP_21 of ValExec_CompareRecF32_lt_2 @[Ray_AABB_1.scala 608:25]
    FCMP_21.io is invalid
    FCMP_21.clock <= clock
    FCMP_21.reset <= reset
    FCMP_21.io.a <= c1Min @[Ray_AABB_1.scala 609:22]
    FCMP_21.io.b <= c0Min @[Ray_AABB_1.scala 610:22]
    FCMP_21.io.expected.out <= UInt<1>("h00") @[Ray_AABB_1.scala 611:33]
    FCMP_21.io.expected.exceptionFlags <= UInt<1>("h00") @[Ray_AABB_1.scala 612:44]
    node _T_47 = gt(FCMP_21.io.actual.out, UInt<1>("h00")) @[Ray_AABB_1.scala 613:36]
    when _T_47 : @[Ray_AABB_1.scala 613:42]
      swp <= UInt<1>("h01") @[Ray_AABB_1.scala 614:33]
      skip @[Ray_AABB_1.scala 613:42]
    else : @[Ray_AABB_1.scala 615:21]
      swp <= UInt<1>("h00") @[Ray_AABB_1.scala 616:33]
      skip @[Ray_AABB_1.scala 615:21]
    io.rayid_out <= rayid_5 @[Ray_AABB_1.scala 619:47]
    io.hitT_out <= hitT_5 @[Ray_AABB_1.scala 620:48]
    node _T_48 = eq(traverseChild0, UInt<1>("h00")) @[Ray_AABB_1.scala 621:10]
    node _T_49 = eq(traverseChild1, UInt<1>("h00")) @[Ray_AABB_1.scala 621:29]
    node _T_50 = eq(_T_49, UInt<1>("h01")) @[Ray_AABB_1.scala 621:45]
    node _T_51 = and(_T_48, _T_50) @[Ray_AABB_1.scala 621:26]
    node _T_52 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 621:61]
    node _T_53 = and(_T_51, _T_52) @[Ray_AABB_1.scala 621:51]
    when _T_53 : @[Ray_AABB_1.scala 621:69]
      io.pop <= UInt<1>("h01") @[Ray_AABB_1.scala 622:33]
      io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 623:32]
      io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 624:35]
      io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 625:33]
      io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 626:26]
      io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 627:26]
      io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 628:26]
      io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 629:28]
      skip @[Ray_AABB_1.scala 621:69]
    else : @[Ray_AABB_1.scala 630:74]
      node _T_54 = eq(traverseChild0, UInt<1>("h00")) @[Ray_AABB_1.scala 630:17]
      node _T_55 = eq(traverseChild1, UInt<1>("h01")) @[Ray_AABB_1.scala 630:50]
      node _T_56 = and(_T_54, _T_55) @[Ray_AABB_1.scala 630:34]
      node _T_57 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 630:66]
      node _T_58 = and(_T_56, _T_57) @[Ray_AABB_1.scala 630:56]
      when _T_58 : @[Ray_AABB_1.scala 630:74]
        wire _WIRE_12 : UInt<1> @[common.scala 99:23]
        _WIRE_12 is invalid @[common.scala 99:23]
        node _T_59 = bits(cidx_1_5, 31, 31) @[common.scala 100:21]
        node _T_60 = eq(_T_59, UInt<1>("h00")) @[common.scala 100:25]
        node _T_61 = mux(_T_60, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
        _WIRE_12 <= _T_61 @[common.scala 100:13]
        node _T_62 = eq(_WIRE_12, UInt<1>("h00")) @[Ray_AABB_1.scala 641:32]
        when _T_62 : @[Ray_AABB_1.scala 641:39]
          io.leaf <= UInt<1>("h01") @[Ray_AABB_1.scala 642:40]
          io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 643:38]
          io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 644:37]
          io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 645:37]
          io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 646:30]
          io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 647:30]
          io.nodeIdx_2 <= cidx_1_5 @[Ray_AABB_1.scala 648:30]
          io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 649:32]
          skip @[Ray_AABB_1.scala 641:39]
        else : @[Ray_AABB_1.scala 650:45]
          wire _WIRE_13 : UInt<1> @[common.scala 99:23]
          _WIRE_13 is invalid @[common.scala 99:23]
          node _T_63 = bits(cidx_1_5, 31, 31) @[common.scala 100:21]
          node _T_64 = eq(_T_63, UInt<1>("h00")) @[common.scala 100:25]
          node _T_65 = mux(_T_64, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
          _WIRE_13 <= _T_65 @[common.scala 100:13]
          node _T_66 = eq(_WIRE_13, UInt<1>("h01")) @[Ray_AABB_1.scala 650:38]
          when _T_66 : @[Ray_AABB_1.scala 650:45]
            io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 651:39]
            io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 652:37]
            io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 653:36]
            io.back <= UInt<1>("h01") @[Ray_AABB_1.scala 654:37]
            io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 655:30]
            io.nodeIdx_1 <= cidx_1_5 @[Ray_AABB_1.scala 656:29]
            io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 657:30]
            io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 658:32]
            skip @[Ray_AABB_1.scala 650:45]
          else : @[Ray_AABB_1.scala 659:20]
            io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 660:39]
            io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 661:37]
            io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 662:36]
            io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 663:37]
            io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 664:30]
            io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 665:29]
            io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 666:30]
            io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 667:32]
            skip @[Ray_AABB_1.scala 659:20]
        skip @[Ray_AABB_1.scala 630:74]
      else : @[Ray_AABB_1.scala 669:78]
        node _T_67 = eq(traverseChild1, UInt<1>("h00")) @[Ray_AABB_1.scala 669:35]
        node _T_68 = and(traverseChild0, _T_67) @[Ray_AABB_1.scala 669:32]
        node _T_69 = eq(_T_68, UInt<1>("h01")) @[Ray_AABB_1.scala 669:54]
        node _T_70 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 669:70]
        node _T_71 = and(_T_69, _T_70) @[Ray_AABB_1.scala 669:60]
        when _T_71 : @[Ray_AABB_1.scala 669:78]
          wire _WIRE_14 : UInt<1> @[common.scala 99:23]
          _WIRE_14 is invalid @[common.scala 99:23]
          node _T_72 = bits(cidx_0_5, 31, 31) @[common.scala 100:21]
          node _T_73 = eq(_T_72, UInt<1>("h00")) @[common.scala 100:25]
          node _T_74 = mux(_T_73, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
          _WIRE_14 <= _T_74 @[common.scala 100:13]
          node _T_75 = eq(_WIRE_14, UInt<1>("h00")) @[Ray_AABB_1.scala 680:32]
          when _T_75 : @[Ray_AABB_1.scala 680:39]
            io.leaf <= UInt<1>("h01") @[Ray_AABB_1.scala 681:44]
            io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 682:42]
            io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 683:41]
            io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 684:41]
            io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 685:34]
            io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 686:34]
            io.nodeIdx_2 <= cidx_0_5 @[Ray_AABB_1.scala 687:34]
            io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 688:36]
            skip @[Ray_AABB_1.scala 680:39]
          else : @[Ray_AABB_1.scala 689:45]
            wire _WIRE_15 : UInt<1> @[common.scala 99:23]
            _WIRE_15 is invalid @[common.scala 99:23]
            node _T_76 = bits(cidx_0_5, 31, 31) @[common.scala 100:21]
            node _T_77 = eq(_T_76, UInt<1>("h00")) @[common.scala 100:25]
            node _T_78 = mux(_T_77, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
            _WIRE_15 <= _T_78 @[common.scala 100:13]
            node _T_79 = eq(_WIRE_15, UInt<1>("h01")) @[Ray_AABB_1.scala 689:38]
            when _T_79 : @[Ray_AABB_1.scala 689:45]
              io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 690:43]
              io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 691:40]
              io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 692:41]
              io.back <= UInt<1>("h01") @[Ray_AABB_1.scala 693:41]
              io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 694:34]
              io.nodeIdx_1 <= cidx_0_5 @[Ray_AABB_1.scala 695:33]
              io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 696:34]
              io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 697:36]
              skip @[Ray_AABB_1.scala 689:45]
            else : @[Ray_AABB_1.scala 698:20]
              io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 699:43]
              io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 700:40]
              io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 701:41]
              io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 702:41]
              io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 703:34]
              io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 704:33]
              io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 705:34]
              io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 706:36]
              skip @[Ray_AABB_1.scala 698:20]
          skip @[Ray_AABB_1.scala 669:78]
        else : @[Ray_AABB_1.scala 708:84]
          node _T_80 = eq(traverseChild0, UInt<1>("h01")) @[Ray_AABB_1.scala 708:31]
          node _T_81 = eq(traverseChild1, UInt<1>("h01")) @[Ray_AABB_1.scala 708:59]
          node _T_82 = and(_T_80, _T_81) @[Ray_AABB_1.scala 708:39]
          node _T_83 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 708:76]
          node _T_84 = and(_T_82, _T_83) @[Ray_AABB_1.scala 708:66]
          when _T_84 : @[Ray_AABB_1.scala 708:84]
            node _T_85 = eq(swp, UInt<1>("h01")) @[Ray_AABB_1.scala 709:18]
            node _T_86 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 709:35]
            node _T_87 = and(_T_85, _T_86) @[Ray_AABB_1.scala 709:25]
            when _T_87 : @[Ray_AABB_1.scala 709:43]
              wire _WIRE_16 : UInt<1> @[common.scala 99:23]
              _WIRE_16 is invalid @[common.scala 99:23]
              node _T_88 = bits(cidx_1_5, 31, 31) @[common.scala 100:21]
              node _T_89 = eq(_T_88, UInt<1>("h00")) @[common.scala 100:25]
              node _T_90 = mux(_T_89, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
              _WIRE_16 <= _T_90 @[common.scala 100:13]
              node _T_91 = eq(_WIRE_16, UInt<1>("h00")) @[Ray_AABB_1.scala 710:36]
              when _T_91 : @[Ray_AABB_1.scala 710:43]
                io.push <= UInt<1>("h01") @[Ray_AABB_1.scala 711:38]
                io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 712:39]
                io.leaf <= UInt<1>("h01") @[Ray_AABB_1.scala 713:41]
                io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 714:39]
                io.nodeIdx_0 <= cidx_0_5 @[Ray_AABB_1.scala 715:32]
                io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 716:32]
                io.nodeIdx_2 <= cidx_1_5 @[Ray_AABB_1.scala 717:32]
                io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 718:36]
                skip @[Ray_AABB_1.scala 710:43]
              else : @[Ray_AABB_1.scala 719:49]
                wire _WIRE_17 : UInt<1> @[common.scala 99:23]
                _WIRE_17 is invalid @[common.scala 99:23]
                node _T_92 = bits(cidx_1_5, 31, 31) @[common.scala 100:21]
                node _T_93 = eq(_T_92, UInt<1>("h00")) @[common.scala 100:25]
                node _T_94 = mux(_T_93, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
                _WIRE_17 <= _T_94 @[common.scala 100:13]
                node _T_95 = eq(_WIRE_17, UInt<1>("h01")) @[Ray_AABB_1.scala 719:42]
                when _T_95 : @[Ray_AABB_1.scala 719:49]
                  io.push <= UInt<1>("h01") @[Ray_AABB_1.scala 720:38]
                  io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 721:39]
                  io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 722:41]
                  io.back <= UInt<1>("h01") @[Ray_AABB_1.scala 723:39]
                  io.nodeIdx_0 <= cidx_0_5 @[Ray_AABB_1.scala 724:32]
                  io.nodeIdx_1 <= cidx_1_5 @[Ray_AABB_1.scala 725:32]
                  io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 726:32]
                  io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 727:36]
                  skip @[Ray_AABB_1.scala 719:49]
                else : @[Ray_AABB_1.scala 728:24]
                  io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 729:38]
                  io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 730:39]
                  io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 731:41]
                  io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 732:39]
                  io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 733:32]
                  io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 734:32]
                  io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 735:32]
                  io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 736:36]
                  skip @[Ray_AABB_1.scala 728:24]
              skip @[Ray_AABB_1.scala 709:43]
            else : @[Ray_AABB_1.scala 738:49]
              node _T_96 = eq(swp, UInt<1>("h00")) @[Ray_AABB_1.scala 738:24]
              node _T_97 = eq(valid_5, UInt<1>("h01")) @[Ray_AABB_1.scala 738:41]
              node _T_98 = and(_T_96, _T_97) @[Ray_AABB_1.scala 738:31]
              when _T_98 : @[Ray_AABB_1.scala 738:49]
                wire _WIRE_18 : UInt<1> @[common.scala 99:23]
                _WIRE_18 is invalid @[common.scala 99:23]
                node _T_99 = bits(cidx_0_5, 31, 31) @[common.scala 100:21]
                node _T_100 = eq(_T_99, UInt<1>("h00")) @[common.scala 100:25]
                node _T_101 = mux(_T_100, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
                _WIRE_18 <= _T_101 @[common.scala 100:13]
                node _T_102 = eq(_WIRE_18, UInt<1>("h00")) @[Ray_AABB_1.scala 739:36]
                when _T_102 : @[Ray_AABB_1.scala 739:43]
                  io.push <= UInt<1>("h01") @[Ray_AABB_1.scala 740:38]
                  io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 741:39]
                  io.leaf <= UInt<1>("h01") @[Ray_AABB_1.scala 742:41]
                  io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 743:39]
                  io.nodeIdx_0 <= cidx_1_5 @[Ray_AABB_1.scala 744:32]
                  io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 745:32]
                  io.nodeIdx_2 <= cidx_0_5 @[Ray_AABB_1.scala 746:32]
                  io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 747:37]
                  skip @[Ray_AABB_1.scala 739:43]
                else : @[Ray_AABB_1.scala 748:49]
                  wire _WIRE_19 : UInt<1> @[common.scala 99:23]
                  _WIRE_19 is invalid @[common.scala 99:23]
                  node _T_103 = bits(cidx_0_5, 31, 31) @[common.scala 100:21]
                  node _T_104 = eq(_T_103, UInt<1>("h00")) @[common.scala 100:25]
                  node _T_105 = mux(_T_104, UInt<1>("h01"), UInt<1>("h00")) @[common.scala 100:18]
                  _WIRE_19 <= _T_105 @[common.scala 100:13]
                  node _T_106 = eq(_WIRE_19, UInt<1>("h01")) @[Ray_AABB_1.scala 748:42]
                  when _T_106 : @[Ray_AABB_1.scala 748:49]
                    io.push <= UInt<1>("h01") @[Ray_AABB_1.scala 749:38]
                    io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 750:39]
                    io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 751:41]
                    io.back <= UInt<1>("h01") @[Ray_AABB_1.scala 752:39]
                    io.nodeIdx_0 <= cidx_1_5 @[Ray_AABB_1.scala 753:32]
                    io.nodeIdx_1 <= cidx_0_5 @[Ray_AABB_1.scala 754:32]
                    io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 755:32]
                    io.valid_out <= UInt<1>("h01") @[Ray_AABB_1.scala 756:36]
                    skip @[Ray_AABB_1.scala 748:49]
                  else : @[Ray_AABB_1.scala 757:24]
                    io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 758:38]
                    io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 759:39]
                    io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 760:41]
                    io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 761:39]
                    io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 762:32]
                    io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 763:32]
                    io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 764:32]
                    io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 765:36]
                    skip @[Ray_AABB_1.scala 757:24]
                skip @[Ray_AABB_1.scala 738:49]
              else : @[Ray_AABB_1.scala 767:20]
                io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 787:38]
                io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 788:39]
                io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 789:41]
                io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 790:39]
                io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 791:32]
                io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 792:32]
                io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 793:32]
                io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 794:36]
                skip @[Ray_AABB_1.scala 767:20]
            skip @[Ray_AABB_1.scala 708:84]
          else : @[Ray_AABB_1.scala 796:16]
            io.push <= UInt<1>("h00") @[Ray_AABB_1.scala 797:30]
            io.pop <= UInt<1>("h00") @[Ray_AABB_1.scala 798:31]
            io.leaf <= UInt<1>("h00") @[Ray_AABB_1.scala 799:33]
            io.back <= UInt<1>("h00") @[Ray_AABB_1.scala 800:31]
            io.nodeIdx_0 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 801:24]
            io.nodeIdx_1 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 802:24]
            io.nodeIdx_2 <= asSInt(UInt<1>("h00")) @[Ray_AABB_1.scala 803:24]
            io.valid_out <= UInt<1>("h00") @[Ray_AABB_1.scala 804:28]
            skip @[Ray_AABB_1.scala 796:16]
    
